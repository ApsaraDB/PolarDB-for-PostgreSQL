-- Test select pg_settings where group is Encryption 
--
-- Clean up in case a prior regression run failed
-- Suppress NOTICE messages when users/groups don't exist
SET client_min_messages TO 'panic';
DROP ROLE IF EXISTS regressioncleanupuser;
DROP ROLE IF EXISTS polarsuper;
DROP ROLE IF EXISTS normaluser;
RESET client_min_messages;
-- create polar superuser and normal user
create user regressioncleanupuser superuser;
create user polarsuper polar_superuser login replication;
create user normaluser login createdb;
-- test create publication for all tables for superuser, polarsuper, normaluser
\c - regressioncleanupuser
select name, vartype, enumvals, category, short_desc from pg_settings where name = 'polar_cluster_passphrase_command';
               name               | vartype | enumvals |      category      |                       short_desc                       
----------------------------------+---------+----------+--------------------+--------------------------------------------------------
 polar_cluster_passphrase_command | string  |          | Encryption for TDE | Command to obtain passphrases for database encryption.
(1 row)

select name from pg_settings where category = 'Encryption for TDE';
               name               
----------------------------------
 polar_cluster_passphrase_command
(1 row)

select name, category from pg_settings where category like 'Encryption for TDE%';
               name               |      category      
----------------------------------+--------------------
 polar_cluster_passphrase_command | Encryption for TDE
(1 row)

\c - polarsuper
select name, vartype, enumvals, category, short_desc from pg_settings where name = 'polar_cluster_passphrase_command';
 name | vartype | enumvals | category | short_desc 
------+---------+----------+----------+------------
(0 rows)

select name from pg_settings where category = 'Encryption for TDE';
 name 
------
(0 rows)

select name, category from pg_settings where category like 'Encryption for TDE%';
 name | category 
------+----------
(0 rows)

\c - normaluser
select name, vartype, enumvals, category, short_desc from pg_settings where name = 'polar_cluster_passphrase_command';
 name | vartype | enumvals | category | short_desc 
------+---------+----------+----------+------------
(0 rows)

select name from pg_settings where category = 'Encryption for TDE';
 name 
------
(0 rows)

select name, category from pg_settings where category like 'Encryption for TDE%';
 name | category 
------+----------
(0 rows)

--cleanup
\c - regressioncleanupuser
\c postgres
SET client_min_messages TO 'warning';
DROP ROLE IF EXISTS polarsuper;
DROP ROLE IF EXISTS normaluser;
RESET client_min_messages;
