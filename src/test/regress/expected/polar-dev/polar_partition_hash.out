------------------------------------------------------------------------
--hash partition
--Partition constraint: satisfies_hash_partition('16384'::oid, 3, 1, id)
drop table t1_hash cascade;
ERROR:  table "t1_hash" does not exist
CREATE TABLE t1_hash (id int8, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: bigint = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: bigint = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1+1-1;
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id int4, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: integer = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: integer = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1+1-1;
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id int2, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: smallint = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: smallint = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id real, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: real = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: real = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1+1-1;
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id float4, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: real = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: real = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1+1-1;
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id float8, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: double precision = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: double precision = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1+1-1;
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id bool, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
ERROR:  column "id" is of type boolean but expression is of type integer
LINE 1: INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
                                    ^
HINT:  You will need to rewrite or cast the expression.
select * from t1_hash where id =1;
ERROR:  operator does not exist: boolean = integer
LINE 1: select * from t1_hash where id =1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bigint;
ERROR:  operator does not exist: boolean = bigint
LINE 1: select * from t1_hash where id =1::bigint;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int4;
ERROR:  operator does not exist: boolean = integer
LINE 1: select * from t1_hash where id =1::int4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int2;
ERROR:  operator does not exist: boolean = smallint
LINE 1: select * from t1_hash where id =1::int2;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::real;
ERROR:  operator does not exist: boolean = real
LINE 1: select * from t1_hash where id =1::real;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float4;
ERROR:  operator does not exist: boolean = real
LINE 1: select * from t1_hash where id =1::float4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float8;
ERROR:  operator does not exist: boolean = double precision
LINE 1: select * from t1_hash where id =1::float8;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bool;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::decimal;
ERROR:  operator does not exist: boolean = numeric
LINE 1: select * from t1_hash where id =1::decimal;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::numeric;
ERROR:  operator does not exist: boolean = numeric
LINE 1: select * from t1_hash where id =1::numeric;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::text;
ERROR:  operator does not exist: boolean = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1+1-1;
ERROR:  operator does not exist: boolean = integer
LINE 1: select * from t1_hash where id =1+1-1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
drop table t1_hash cascade;
CREATE TABLE t1_hash (id bool, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
ERROR:  column "id" is of type boolean but expression is of type integer
LINE 1: INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
                                    ^
HINT:  You will need to rewrite or cast the expression.
select * from t1_hash where id =1;
ERROR:  operator does not exist: boolean = integer
LINE 1: select * from t1_hash where id =1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bigint;
ERROR:  operator does not exist: boolean = bigint
LINE 1: select * from t1_hash where id =1::bigint;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int4;
ERROR:  operator does not exist: boolean = integer
LINE 1: select * from t1_hash where id =1::int4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int2;
ERROR:  operator does not exist: boolean = smallint
LINE 1: select * from t1_hash where id =1::int2;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::real;
ERROR:  operator does not exist: boolean = real
LINE 1: select * from t1_hash where id =1::real;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float4;
ERROR:  operator does not exist: boolean = real
LINE 1: select * from t1_hash where id =1::float4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float8;
ERROR:  operator does not exist: boolean = double precision
LINE 1: select * from t1_hash where id =1::float8;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bool;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::decimal;
ERROR:  operator does not exist: boolean = numeric
LINE 1: select * from t1_hash where id =1::decimal;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::numeric;
ERROR:  operator does not exist: boolean = numeric
LINE 1: select * from t1_hash where id =1::numeric;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::text;
ERROR:  operator does not exist: boolean = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1+1-1;
ERROR:  operator does not exist: boolean = integer
LINE 1: select * from t1_hash where id =1+1-1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
drop table t1_hash cascade;
CREATE TABLE t1_hash (id decimal, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::real;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: numeric = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
  1 |    58
(1 row)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: numeric = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
  1 |    58
(1 row)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id numeric, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
select * from t1_hash where id =1;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::bigint;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::int4;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::int2;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::real;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::float4;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::float8;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: numeric = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::numeric;
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1::text;
ERROR:  operator does not exist: numeric = text
LINE 1: select * from t1_hash where id =1::text;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id ='1';
 id | value 
----+-------
(0 rows)

select * from t1_hash where id =1+1-1;
 id | value 
----+-------
(0 rows)

drop table t1_hash cascade;
CREATE TABLE t1_hash (id char(10), value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
ERROR:  operator does not exist: character = integer
LINE 1: select * from t1_hash where id =1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bigint;
ERROR:  operator does not exist: character = bigint
LINE 1: select * from t1_hash where id =1::bigint;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int4;
ERROR:  operator does not exist: character = integer
LINE 1: select * from t1_hash where id =1::int4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int2;
ERROR:  operator does not exist: character = smallint
LINE 1: select * from t1_hash where id =1::int2;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::real;
ERROR:  operator does not exist: character = real
LINE 1: select * from t1_hash where id =1::real;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float4;
ERROR:  operator does not exist: character = real
LINE 1: select * from t1_hash where id =1::float4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float8;
ERROR:  operator does not exist: character = double precision
LINE 1: select * from t1_hash where id =1::float8;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: character = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
ERROR:  operator does not exist: character = numeric
LINE 1: select * from t1_hash where id =1::decimal;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::numeric;
ERROR:  operator does not exist: character = numeric
LINE 1: select * from t1_hash where id =1::numeric;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::text;
     id     | value 
------------+-------
 1          |    58
(1 row)

select * from t1_hash where id ='1';
     id     | value 
------------+-------
 1          |    58
(1 row)

select * from t1_hash where id =1+1-1;
ERROR:  operator does not exist: character = integer
LINE 1: select * from t1_hash where id =1+1-1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
drop table t1_hash cascade;
CREATE TABLE t1_hash (id text, value int) PARTITION BY HASH(id);
CREATE TABLE t1_hash_p1 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 0);
CREATE TABLE t1_hash_p2 PARTITION OF t1_hash FOR VALUES WITH (modulus 2, remainder 1);
INSERT INTO t1_hash VALUES (1,58), (2,60), (3,75), (4,90);
select * from t1_hash where id =1;
ERROR:  operator does not exist: text = integer
LINE 1: select * from t1_hash where id =1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bigint;
ERROR:  operator does not exist: text = bigint
LINE 1: select * from t1_hash where id =1::bigint;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int4;
ERROR:  operator does not exist: text = integer
LINE 1: select * from t1_hash where id =1::int4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::int2;
ERROR:  operator does not exist: text = smallint
LINE 1: select * from t1_hash where id =1::int2;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::real;
ERROR:  operator does not exist: text = real
LINE 1: select * from t1_hash where id =1::real;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float4;
ERROR:  operator does not exist: text = real
LINE 1: select * from t1_hash where id =1::float4;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::float8;
ERROR:  operator does not exist: text = double precision
LINE 1: select * from t1_hash where id =1::float8;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::bool;
ERROR:  operator does not exist: text = boolean
LINE 1: select * from t1_hash where id =1::bool;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::decimal;
ERROR:  operator does not exist: text = numeric
LINE 1: select * from t1_hash where id =1::decimal;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::numeric;
ERROR:  operator does not exist: text = numeric
LINE 1: select * from t1_hash where id =1::numeric;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
select * from t1_hash where id =1::text;
 id | value 
----+-------
 1  |    58
(1 row)

select * from t1_hash where id ='1';
 id | value 
----+-------
 1  |    58
(1 row)

select * from t1_hash where id =1+1-1;
ERROR:  operator does not exist: text = integer
LINE 1: select * from t1_hash where id =1+1-1;
                                       ^
HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
set polar_px_enable_partition_hash=0;
select * from t1_hash where id ='1';
 id | value 
----+-------
 1  |    58
(1 row)

