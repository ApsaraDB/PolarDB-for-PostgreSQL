set polar_max_hashagg_mem=128;
set polar_max_setop_mem=128;
set polar_max_subplan_mem=128;
set polar_max_recursiveunion_mem=128;
-- HashAgg
explain (costs off) select count(*) from (select s from generate_series(1, 1000) s group by s) g;
                   QUERY PLAN                   
------------------------------------------------
 Aggregate
   ->  HashAggregate
         Group Key: s.s
         ->  Function Scan on generate_series s
(4 rows)

select count(*) from (select s from generate_series(1, 1000) s group by s) g;
ERROR:  out of memory
DETAIL:  Too much memory usage in HashAggregation, max: 128 kB, please adjust polar_max_hashagg_mem to enlarge memory limit
set polar_max_hashagg_mem=1024;
select count(*) from (select s from generate_series(1, 1000) s group by s) g;
 count 
-------
  1000
(1 row)

-- 0 means no limit
set polar_max_hashagg_mem=0;
select count(*) from (select s from generate_series(1, 1000) s group by s) g;
 count 
-------
  1000
(1 row)

-- SetOp
explain (costs off) select generate_series(1,1000) except select generate_series(1,1000);
                QUERY PLAN                 
-------------------------------------------
 HashSetOp Except
   ->  Append
         ->  Subquery Scan on "*SELECT* 1"
               ->  ProjectSet
                     ->  Result
         ->  Subquery Scan on "*SELECT* 2"
               ->  ProjectSet
                     ->  Result
(8 rows)

select generate_series(1,1000) except select generate_series(1,1000);
ERROR:  out of memory
DETAIL:  Too much memory usage in SetOp, max: 128 kB, please adjust polar_max_setop_mem to enlarge memory limit
set polar_max_setop_mem=1024;
select generate_series(1,1000) except select generate_series(1,1000);
 generate_series 
-----------------
(0 rows)

-- Subplan
explain (costs off) select * from generate_series(1,1001) as s where s not in (select * from generate_series(1,1000));
                QUERY PLAN                
------------------------------------------
 Function Scan on generate_series s
   Filter: (NOT (hashed SubPlan 1))
   SubPlan 1
     ->  Function Scan on generate_series
(4 rows)

select * from generate_series(1,1001) as s where s not in (select * from generate_series(1,1000));
ERROR:  out of memory
DETAIL:  Too much memory usage in Subplan, max: 128 kB, please adjust polar_max_subplan_mem to enlarge memory limit
set polar_max_subplan_mem=1024;
select * from generate_series(1,1001) as s where s not in (select * from generate_series(1,1000));
  s   
------
 1001
(1 row)

-- RecursiveUnion
explain with recursive x(a) as
(select 1 as a
union
select a + 1 from x where a < 2000)
select count(*) from x;
                               QUERY PLAN                                
-------------------------------------------------------------------------
 Aggregate  (cost=3.65..3.66 rows=1 width=8)
   CTE x
     ->  Recursive Union  (cost=0.00..2.95 rows=31 width=4)
           ->  Result  (cost=0.00..0.01 rows=1 width=4)
           ->  WorkTable Scan on x x_1  (cost=0.00..0.23 rows=3 width=4)
                 Filter: (a < 2000)
   ->  CTE Scan on x  (cost=0.00..0.62 rows=31 width=0)
(7 rows)

with recursive x(a) as
(select 1 as a
union
select a + 1 from x where a < 2000)
select count(*) from x;
ERROR:  out of memory
DETAIL:  Too much memory usage in RecursiveUnion, max: 128 kB, please adjust polar_max_recursiveunion_mem to enlarge memory limit
set polar_max_recursiveunion_mem=1024;
with recursive x(a) as
(select 1 as a
union
select a + 1 from x where a < 2000)
select count(*) from x;
 count 
-------
  2000
(1 row)

