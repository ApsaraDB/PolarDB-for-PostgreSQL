-- config
/*--POLAR_ENABLE_PX*/
set polar_enable_px = 1;
set polar_px_enable_insert_select = 1;
set polar_px_optimizer_enable_dml_constraints = 1;
set polar_px_enable_insert_from_tableless = 1;
-- create table
\i sql/polar-dev/px_parallel_dml_init_corr.sql
-- create normal table
drop table if exists px_parallel_dml_corr_t1 cascade;
CREATE TABLE px_parallel_dml_corr_t1 (c1 int, c2 int) ;
insert into px_parallel_dml_corr_t1 select generate_series(1,100),generate_series(1,100);
drop table if exists px_parallel_dml_corr_t2 cascade;
CREATE TABLE px_parallel_dml_corr_t2 (c1 int, c2 int) ;
insert into px_parallel_dml_corr_t2 select generate_series(1,100),generate_series(1,100);
drop table if exists px_parallel_dml_corr_t3 cascade;
CREATE TABLE px_parallel_dml_corr_t3 (c1 int, c2 int) ;
insert into px_parallel_dml_corr_t3 select generate_series(1,1000),generate_series(1,1000);
select count(*) from px_parallel_dml_corr_t1;
 count 
-------
   100
(1 row)

select count(*) from px_parallel_dml_corr_t2;
 count 
-------
   100
(1 row)

-- create partition table
drop table if exists px_parallel_dml_corr_t0_hash_insert cascade;
CREATE TABLE px_parallel_dml_corr_t0_hash_insert (id int, value int) PARTITION BY HASH(id);
drop table if exists px_parallel_dml_corr_t0_insert cascade;
CREATE TABLE px_parallel_dml_corr_t0_insert (id int, value int);
drop table if exists px_parallel_dml_corr_t0_select_table cascade;
CREATE TABLE px_parallel_dml_corr_t0_select_table (id int, value int);
insert into px_parallel_dml_corr_t0_select_table select generate_series(1,12000),generate_series(1,12000);
drop table if exists px_parallel_dml_corr_t0_select_list_table cascade;
CREATE TABLE px_parallel_dml_corr_t0_select_list_table (status character varying(30), value int);
-- PX Insert... Select from Partition Table
------------------------------------------------------------------------
-- Create partition table
drop table if exists px_parallel_dml_corr_t0_hash cascade;
CREATE TABLE px_parallel_dml_corr_t0_hash (id int, value int) PARTITION BY HASH(id);
CREATE TABLE px_parallel_dml_corr_t0_hash_p1 PARTITION OF px_parallel_dml_corr_t0_hash FOR VALUES WITH (modulus 3, remainder 0);
CREATE TABLE px_parallel_dml_corr_t0_hash_p2 PARTITION OF px_parallel_dml_corr_t0_hash FOR VALUES WITH (modulus 3, remainder 1);
CREATE TABLE px_parallel_dml_corr_t0_hash_p3 PARTITION OF px_parallel_dml_corr_t0_hash FOR VALUES WITH (modulus 3, remainder 2);
insert into px_parallel_dml_corr_t0_hash select generate_series(1,30000),generate_series(1,30000);
------------------------------------------------------------------------
--range partition
--Partition constraint: ((x IS NOT NULL) AND (x >= 10) AND (x < 20))
drop table if exists px_parallel_dml_corr_t1_range cascade;
CREATE TABLE px_parallel_dml_corr_t1_range(id int, value int) PARTITION BY RANGE(id);
CREATE TABLE px_parallel_dml_corr_t1_range_p1 PARTITION OF px_parallel_dml_corr_t1_range FOR VALUES FROM (1) TO (10000);
CREATE TABLE px_parallel_dml_corr_t1_range_p2 PARTITION OF px_parallel_dml_corr_t1_range FOR VALUES FROM (10000) TO (20000);
CREATE TABLE px_parallel_dml_corr_t1_range_p3 PARTITION OF px_parallel_dml_corr_t1_range DEFAULT;
insert into px_parallel_dml_corr_t1_range select generate_series(1,30000, 2);
--range partition with INDEX
drop table if exists px_parallel_dml_corr_t1_range_index cascade;
CREATE TABLE px_parallel_dml_corr_t1_range_index(id int, value int) PARTITION BY RANGE(id);
CREATE TABLE px_parallel_dml_corr_t1_range_p1_index PARTITION OF px_parallel_dml_corr_t1_range_index FOR VALUES FROM (1) TO (10000);
CREATE TABLE px_parallel_dml_corr_t1_range_p2_index PARTITION OF px_parallel_dml_corr_t1_range_index FOR VALUES FROM (10000) TO (20000);
CREATE TABLE px_parallel_dml_corr_t1_range_p3_index PARTITION OF px_parallel_dml_corr_t1_range_index DEFAULT;
insert into px_parallel_dml_corr_t1_range_index select generate_series(1,30000, 2);
CREATE INDEX px_parallel_dml_corr_t1_partition_index on px_parallel_dml_corr_t1_range_index(id);
------------------------------------------------------------------------
--list
--Partition constraint: ((b IS NOT NULL) AND (b = ANY (ARRAY[1, 3])))
drop table if exists px_parallel_dml_corr_t2_list cascade;
create table px_parallel_dml_corr_t2_list(job character varying(30), pvalue int) partition by list (job);
CREATE TABLE px_parallel_dml_corr_t2_list_p1 PARTITION OF px_parallel_dml_corr_t2_list FOR VALUES IN ('student');
CREATE TABLE px_parallel_dml_corr_t2_list_p2 PARTITION OF px_parallel_dml_corr_t2_list FOR VALUES IN ('teacher');
CREATE TABLE px_parallel_dml_corr_t2_list_p3 PARTITION OF px_parallel_dml_corr_t2_list DEFAULT;
insert into px_parallel_dml_corr_t2_list select 'student',generate_series(1,10000);
insert into px_parallel_dml_corr_t2_list select 'teacher',generate_series(10000,20000);
insert into px_parallel_dml_corr_t2_list select 'other',generate_series(20000,30000);
-- Index Test Init
drop table if exists px_parallel_dml_corr_t4 cascade;
CREATE TABLE px_parallel_dml_corr_t4 (c1 int, c2 int) ;
insert into px_parallel_dml_corr_t4 select generate_series(1,1000),generate_series(1,1000);
CREATE INDEX t_index_corr on px_parallel_dml_corr_t4(c1);
-- Constrain Test Init
drop table if exists px_parallel_dml_corr_t5 cascade;
CREATE TABLE px_parallel_dml_corr_t5 (c1 int, c2 int not NULL) ;
drop table if exists px_parallel_dml_corr_t6 cascade;
CREATE TABLE px_parallel_dml_corr_t6 (c1 int, c2 int) ;
---- Insert into table with default num
drop table if exists px_parallel_dml_corr_t8 cascade;
CREATE TABLE px_parallel_dml_corr_t8(
c1 int,
c2 int DEFAULT 99999,
c3 varchar DEFAULT NULL,
c4 timestamp default '2016-06-22 19:10:25-07'
);
drop table if exists px_parallel_dml_corr_t9 cascade;
CREATE TABLE px_parallel_dml_corr_t9 (c1 int, c2 int) ;
insert into px_parallel_dml_corr_t9 select generate_series(1,20),generate_series(1,20);
-- Constrain Test Init
drop table if exists px_parallel_corr_update_t5 cascade;
NOTICE:  table "px_parallel_corr_update_t5" does not exist, skipping
CREATE TABLE px_parallel_corr_update_t5 (c1 int, c2 int not NULL) ;
drop table if exists px_parallel_corr_update_t6 cascade;
NOTICE:  table "px_parallel_corr_update_t6" does not exist, skipping
CREATE TABLE px_parallel_corr_update_t6 (c1 int, c2 int) ;
drop table if exists px_parallel_corr_update_t7 cascade;
NOTICE:  table "px_parallel_corr_update_t7" does not exist, skipping
CREATE TABLE px_parallel_corr_update_t7 (c1 int, c2 int CHECK (c2 < 1000)) ;
-- One Writer worker
set polar_px_insert_dop_num = 1;
\i sql/polar-dev/px_parallel_dml_error_base.sql
--------------------------------------------------------------------------
-- Insert not NULL Constrains Table
set polar_px_optimizer_enable_dml_constraints='off';
insert into px_parallel_dml_corr_t6 select generate_series(1,1000),NULL;
insert into px_parallel_dml_corr_t5 select * from px_parallel_dml_corr_t6 order by c1;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:6: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
set polar_px_optimizer_enable_dml_constraints='on';
set polar_px_enable_update=1;
-- Update not NULL CONSTRAIN
insert into px_parallel_corr_update_t5 select generate_series(1,1000),generate_series(1,1000);
update px_parallel_corr_update_t5 set c2 = NULL;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:14: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
-- Update with CHECK OPTION
insert into px_parallel_corr_update_t7 select generate_series(1,999),generate_series(1,999);
update px_parallel_corr_update_t7 set c2 = 1000;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:19: ERROR:  new row for relation "px_parallel_corr_update_t7" violates check constraint "px_parallel_corr_update_t7_c2_check"
DETAIL:  Failing row contains (1, 1000).
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 999
(1 row)

update px_parallel_corr_update_t7 set c2 = 500;
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 500
(1 row)

-- Three Writer worker
set polar_px_insert_dop_num = 3;
\i sql/polar-dev/px_parallel_dml_error_base.sql
--------------------------------------------------------------------------
-- Insert not NULL Constrains Table
set polar_px_optimizer_enable_dml_constraints='off';
insert into px_parallel_dml_corr_t6 select generate_series(1,1000),NULL;
insert into px_parallel_dml_corr_t5 select * from px_parallel_dml_corr_t6 order by c1;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:6: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
set polar_px_optimizer_enable_dml_constraints='on';
set polar_px_enable_update=1;
-- Update not NULL CONSTRAIN
insert into px_parallel_corr_update_t5 select generate_series(1,1000),generate_series(1,1000);
update px_parallel_corr_update_t5 set c2 = NULL;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:14: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
-- Update with CHECK OPTION
insert into px_parallel_corr_update_t7 select generate_series(1,999),generate_series(1,999);
update px_parallel_corr_update_t7 set c2 = 1000;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:19: ERROR:  new row for relation "px_parallel_corr_update_t7" violates check constraint "px_parallel_corr_update_t7_c2_check"
DETAIL:  Failing row contains (1, 1000).
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 999
(1 row)

update px_parallel_corr_update_t7 set c2 = 500;
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 500
(1 row)

-- 6 Writer worker
set polar_px_insert_dop_num = 6;
\i sql/polar-dev/px_parallel_dml_error_base.sql
--------------------------------------------------------------------------
-- Insert not NULL Constrains Table
set polar_px_optimizer_enable_dml_constraints='off';
insert into px_parallel_dml_corr_t6 select generate_series(1,1000),NULL;
insert into px_parallel_dml_corr_t5 select * from px_parallel_dml_corr_t6 order by c1;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:6: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
set polar_px_optimizer_enable_dml_constraints='on';
set polar_px_enable_update=1;
-- Update not NULL CONSTRAIN
insert into px_parallel_corr_update_t5 select generate_series(1,1000),generate_series(1,1000);
update px_parallel_corr_update_t5 set c2 = NULL;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:14: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
-- Update with CHECK OPTION
insert into px_parallel_corr_update_t7 select generate_series(1,999),generate_series(1,999);
update px_parallel_corr_update_t7 set c2 = 1000;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:19: ERROR:  new row for relation "px_parallel_corr_update_t7" violates check constraint "px_parallel_corr_update_t7_c2_check"
DETAIL:  Failing row contains (1, 1000).
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 999
(1 row)

update px_parallel_corr_update_t7 set c2 = 500;
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 500
(1 row)

-- 9 Writer worker
set polar_px_insert_dop_num = 9;
\i sql/polar-dev/px_parallel_dml_error_base.sql
--------------------------------------------------------------------------
-- Insert not NULL Constrains Table
set polar_px_optimizer_enable_dml_constraints='off';
insert into px_parallel_dml_corr_t6 select generate_series(1,1000),NULL;
insert into px_parallel_dml_corr_t5 select * from px_parallel_dml_corr_t6 order by c1;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:6: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
set polar_px_optimizer_enable_dml_constraints='on';
set polar_px_enable_update=1;
-- Update not NULL CONSTRAIN
insert into px_parallel_corr_update_t5 select generate_series(1,1000),generate_series(1,1000);
update px_parallel_corr_update_t5 set c2 = NULL;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:14: ERROR:  null value in column "c2" violates not-null constraint
DETAIL:  Failing row contains (1, null).
-- Update with CHECK OPTION
insert into px_parallel_corr_update_t7 select generate_series(1,999),generate_series(1,999);
update px_parallel_corr_update_t7 set c2 = 1000;
psql:sql/polar-dev/px_parallel_dml_error_base.sql:19: ERROR:  new row for relation "px_parallel_corr_update_t7" violates check constraint "px_parallel_corr_update_t7_c2_check"
DETAIL:  Failing row contains (66, 1000).
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 999
(1 row)

update px_parallel_corr_update_t7 set c2 = 500;
select max(c2) from px_parallel_corr_update_t7;
 max 
-----
 500
(1 row)

set polar_px_enable_insert_from_tableless = 0;
