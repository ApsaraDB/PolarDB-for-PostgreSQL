-- create a tablespace using WITH clause
CREATE TABLESPACE regress_tblspacewith LOCATION '@testtablespace@' WITH (some_nonexistent_parameter = true); -- fail
ERROR:  polardb is not support user define tablespace yet
CREATE TABLESPACE regress_tblspacewith LOCATION '@testtablespace@' WITH (random_page_cost = 3.0); -- ok
ERROR:  polardb is not support user define tablespace yet
-- check to see the parameter was used
SELECT spcoptions FROM pg_tablespace WHERE spcname = 'regress_tblspacewith';
 spcoptions 
------------
(0 rows)

-- drop the tablespace so we can re-use the location
DROP TABLESPACE regress_tblspacewith;
ERROR:  tablespace "regress_tblspacewith" does not exist
-- create a tablespace we can use
CREATE TABLESPACE regress_tblspace LOCATION '@testtablespace@';
ERROR:  polardb is not support user define tablespace yet
-- try setting and resetting some properties for the new tablespace
ALTER TABLESPACE regress_tblspace SET (random_page_cost = 1.0, seq_page_cost = 1.1);
ERROR:  tablespace "regress_tblspace" does not exist
ALTER TABLESPACE regress_tblspace SET (some_nonexistent_parameter = true);  -- fail
ERROR:  tablespace "regress_tblspace" does not exist
ALTER TABLESPACE regress_tblspace RESET (random_page_cost = 2.0); -- fail
ERROR:  tablespace "regress_tblspace" does not exist
ALTER TABLESPACE regress_tblspace RESET (random_page_cost, effective_io_concurrency); -- ok
ERROR:  tablespace "regress_tblspace" does not exist
-- create a schema we can use
CREATE SCHEMA testschema;
-- try a table
CREATE TABLE testschema.foo (i int) TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
    where c.reltablespace = t.oid AND c.relname = 'foo';
 relname | spcname 
---------+---------
(0 rows)

INSERT INTO testschema.foo VALUES(1);
ERROR:  relation "testschema.foo" does not exist
LINE 1: INSERT INTO testschema.foo VALUES(1);
                    ^
INSERT INTO testschema.foo VALUES(2);
ERROR:  relation "testschema.foo" does not exist
LINE 1: INSERT INTO testschema.foo VALUES(2);
                    ^
-- tables from dynamic sources
CREATE TABLE testschema.asselect TABLESPACE regress_tblspace AS SELECT 1;
ERROR:  tablespace "regress_tblspace" does not exist
SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
    where c.reltablespace = t.oid AND c.relname = 'asselect';
 relname | spcname 
---------+---------
(0 rows)

PREPARE selectsource(int) AS SELECT $1;
CREATE TABLE testschema.asexecute TABLESPACE regress_tblspace
    AS EXECUTE selectsource(2);
ERROR:  tablespace "regress_tblspace" does not exist
SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
    where c.reltablespace = t.oid AND c.relname = 'asexecute';
 relname | spcname 
---------+---------
(0 rows)

-- index
CREATE INDEX foo_idx on testschema.foo(i) TABLESPACE regress_tblspace;
ERROR:  relation "testschema.foo" does not exist
SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
    where c.reltablespace = t.oid AND c.relname = 'foo_idx';
 relname | spcname 
---------+---------
(0 rows)

-- partitioned index
CREATE TABLE testschema.part (a int) PARTITION BY LIST (a);
CREATE TABLE testschema.part1 PARTITION OF testschema.part FOR VALUES IN (1);
CREATE INDEX part_a_idx ON testschema.part (a) TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
CREATE TABLE testschema.part2 PARTITION OF testschema.part FOR VALUES IN (2);
SELECT relname, spcname FROM pg_catalog.pg_tablespace t, pg_catalog.pg_class c
    where c.reltablespace = t.oid AND c.relname LIKE 'part%_idx';
 relname | spcname 
---------+---------
(0 rows)

-- check that default_tablespace doesn't affect ALTER TABLE index rebuilds
CREATE TABLE testschema.test_default_tab(id bigint) TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
INSERT INTO testschema.test_default_tab VALUES (1);
ERROR:  relation "testschema.test_default_tab" does not exist
LINE 1: INSERT INTO testschema.test_default_tab VALUES (1);
                    ^
CREATE INDEX test_index1 on testschema.test_default_tab (id);
ERROR:  relation "testschema.test_default_tab" does not exist
CREATE INDEX test_index2 on testschema.test_default_tab (id) TABLESPACE regress_tblspace;
ERROR:  relation "testschema.test_default_tab" does not exist
\d testschema.test_index1
\d testschema.test_index2
-- use a custom tablespace for default_tablespace
SET default_tablespace TO regress_tblspace;
ERROR:  invalid value for parameter "default_tablespace": "regress_tblspace"
DETAIL:  Tablespace "regress_tblspace" does not exist.
-- tablespace should not change if no rewrite
ALTER TABLE testschema.test_default_tab ALTER id TYPE bigint;
ERROR:  relation "testschema.test_default_tab" does not exist
\d testschema.test_index1
\d testschema.test_index2
SELECT * FROM testschema.test_default_tab;
ERROR:  relation "testschema.test_default_tab" does not exist
LINE 1: SELECT * FROM testschema.test_default_tab;
                      ^
-- tablespace should not change even if there is an index rewrite
ALTER TABLE testschema.test_default_tab ALTER id TYPE int;
ERROR:  relation "testschema.test_default_tab" does not exist
\d testschema.test_index1
\d testschema.test_index2
SELECT * FROM testschema.test_default_tab;
ERROR:  relation "testschema.test_default_tab" does not exist
LINE 1: SELECT * FROM testschema.test_default_tab;
                      ^
-- now use the default tablespace for default_tablespace
SET default_tablespace TO '';
-- tablespace should not change if no rewrite
ALTER TABLE testschema.test_default_tab ALTER id TYPE int;
ERROR:  relation "testschema.test_default_tab" does not exist
\d testschema.test_index1
\d testschema.test_index2
-- tablespace should not change even if there is an index rewrite
ALTER TABLE testschema.test_default_tab ALTER id TYPE bigint;
ERROR:  relation "testschema.test_default_tab" does not exist
\d testschema.test_index1
\d testschema.test_index2
DROP TABLE testschema.test_default_tab;
ERROR:  table "test_default_tab" does not exist
-- check that default_tablespace affects index additions in ALTER TABLE
CREATE TABLE testschema.test_tab(id int) TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
INSERT INTO testschema.test_tab VALUES (1);
ERROR:  relation "testschema.test_tab" does not exist
LINE 1: INSERT INTO testschema.test_tab VALUES (1);
                    ^
SET default_tablespace TO regress_tblspace;
ERROR:  invalid value for parameter "default_tablespace": "regress_tblspace"
DETAIL:  Tablespace "regress_tblspace" does not exist.
ALTER TABLE testschema.test_tab ADD CONSTRAINT test_tab_unique UNIQUE (id);
ERROR:  relation "testschema.test_tab" does not exist
SET default_tablespace TO '';
ALTER TABLE testschema.test_tab ADD CONSTRAINT test_tab_pkey PRIMARY KEY (id);
ERROR:  relation "testschema.test_tab" does not exist
\d testschema.test_tab_unique
\d testschema.test_tab_pkey
SELECT * FROM testschema.test_tab;
ERROR:  relation "testschema.test_tab" does not exist
LINE 1: SELECT * FROM testschema.test_tab;
                      ^
DROP TABLE testschema.test_tab;
ERROR:  table "test_tab" does not exist
-- let's try moving a table from one place to another
CREATE TABLE testschema.atable AS VALUES (1), (2);
CREATE UNIQUE INDEX anindex ON testschema.atable(column1);
ALTER TABLE testschema.atable SET TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
ALTER INDEX testschema.anindex SET TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
ALTER INDEX testschema.part_a_idx SET TABLESPACE pg_global;
ERROR:  relation "testschema.part_a_idx" does not exist
ALTER INDEX testschema.part_a_idx SET TABLESPACE pg_default;
ERROR:  relation "testschema.part_a_idx" does not exist
ALTER INDEX testschema.part_a_idx SET TABLESPACE regress_tblspace;
ERROR:  relation "testschema.part_a_idx" does not exist
INSERT INTO testschema.atable VALUES(3);	-- ok
INSERT INTO testschema.atable VALUES(1);	-- fail (checks index)
ERROR:  duplicate key value violates unique constraint "anindex"
DETAIL:  Key (column1)=(1) already exists.
SELECT COUNT(*) FROM testschema.atable;		-- checks heap
 count 
-------
     3
(1 row)

-- Will fail with bad path
CREATE TABLESPACE regress_badspace LOCATION '/no/such/location';
ERROR:  polardb is not support user define tablespace yet
-- No such tablespace
CREATE TABLE bar (i int) TABLESPACE regress_nosuchspace;
ERROR:  tablespace "regress_nosuchspace" does not exist
-- Fail, not empty
DROP TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
CREATE ROLE regress_tablespace_user1 login;
CREATE ROLE regress_tablespace_user2 login;
GRANT USAGE ON SCHEMA testschema TO regress_tablespace_user2;
ALTER TABLESPACE regress_tblspace OWNER TO regress_tablespace_user1;
ERROR:  tablespace "regress_tblspace" does not exist
CREATE TABLE testschema.tablespace_acl (c int);
-- new owner lacks permission to create this index from scratch
CREATE INDEX k ON testschema.tablespace_acl (c) TABLESPACE regress_tblspace;
ERROR:  tablespace "regress_tblspace" does not exist
ALTER TABLE testschema.tablespace_acl OWNER TO regress_tablespace_user2;
SET SESSION ROLE regress_tablespace_user2;
CREATE TABLE tablespace_table (i int) TABLESPACE regress_tblspace; -- fail
ERROR:  tablespace "regress_tblspace" does not exist
ALTER TABLE testschema.tablespace_acl ALTER c TYPE bigint;
RESET ROLE;
ALTER TABLESPACE regress_tblspace RENAME TO regress_tblspace_renamed;
ERROR:  tablespace "regress_tblspace" does not exist
ALTER TABLE ALL IN TABLESPACE regress_tblspace_renamed SET TABLESPACE pg_default;
ERROR:  tablespace "regress_tblspace_renamed" does not exist
ALTER INDEX ALL IN TABLESPACE regress_tblspace_renamed SET TABLESPACE pg_default;
ERROR:  tablespace "regress_tblspace_renamed" does not exist
-- Should show notice that nothing was done
ALTER TABLE ALL IN TABLESPACE regress_tblspace_renamed SET TABLESPACE pg_default;
ERROR:  tablespace "regress_tblspace_renamed" does not exist
-- Should succeed
DROP TABLESPACE regress_tblspace_renamed;
ERROR:  tablespace "regress_tblspace_renamed" does not exist
DROP SCHEMA testschema CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table testschema.part
drop cascades to table testschema.atable
drop cascades to table testschema.tablespace_acl
DROP ROLE regress_tablespace_user1;
DROP ROLE regress_tablespace_user2;
