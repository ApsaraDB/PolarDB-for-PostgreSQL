/*--EXPLAIN_QUERY_BEGIN*/
create schema result_hash_filter;
-- start_ignore
SET search_path to result_hash_filter;
-- end_ignore
CREATE TABLE select_hash1_tb_part_1 (
    pk numeric(5,0) DEFAULT NULL::numeric NOT NULL,
    varchar2_test character varying(100) DEFAULT NULL::character varying,
    nvarchar2_test character varying(100) DEFAULT NULL::character varying,
    number_test numeric(10,2) DEFAULT NULL::numeric,
    smallint_test numeric(5,0) DEFAULT NULL::numeric,
    integer_test integer,
    decimal_test numeric(10,2) DEFAULT NULL::numeric,
    float_test numeric(10,2) DEFAULT NULL::numeric,
    double_test double precision,
    timestamp_test timestamp(6) without time zone DEFAULT NULL::timestamp without time zone,
    char_size_test character(100) DEFAULT NULL::bpchar,
    nchar_test character(10) DEFAULT NULL::bpchar
);
--
-- Data for Name: select_hash1_tb_part_1; Type: TABLE DATA; Schema: public; Owner: zx_test
--
COPY select_hash1_tb_part_1 (pk, varchar2_test, nvarchar2_test, number_test, smallint_test, integer_test, decimal_test, float_test, double_test, timestamp_test, char_size_test, nchar_test) FROM stdin;
--
-- Name: select_hash1_tb_part_1 select_hash1_tb_part_1_pkey; Type: CONSTRAINT; Schema: public; Owner: zx_test
--
ALTER TABLE ONLY select_hash1_tb_part_1
    ADD CONSTRAINT select_hash1_tb_part_1_pkey PRIMARY KEY (pk);
--
-- Name: pg_oid_13955238_index; Type: INDEX; Schema: public; Owner: zx_test
--
CREATE UNIQUE INDEX pg_oid_13955238_index ON select_hash1_tb_part_1 USING btree (oid);
ERROR:  column "oid" does not exist
--
-- Name: select_hash1_tb_part_1_pkey; Type: INDEX ATTACH; Schema: public; Owner: 
--
ALTER INDEX select_hash1_tb_pkey ATTACH PARTITION select_hash1_tb_part_1_pkey;
ERROR:  relation "select_hash1_tb_pkey" does not exist
--
set polar_px_dop_per_node =1;
SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 
------
    1
    6
    6
    6
    3
    5
    6
   21
   21
   21
   16
   16
   20
   20
   11
   12
   13
   16
   38
   38
   20
   21
   22
   24
   25
   52
   52
   54
   54
   56
   56
   30
   31
   32
   33
   34
  105
  105
  105
   36
   76
   76
   78
   78
   40
   41
   42
   43
  132
  132
  132
   90
   90
   98
   98
   50
  102
  102
   52
  106
  106
  108
  108
   55
  232
  232
  232
  232
   60
   61
   62
   63
   64
   65
   66
  134
  134
   69
   71
  146
  146
  148
  148
  150
  150
   80
   81
   82
  166
  166
   84
   85
  176
  176
   89
   92
   94
   95
  192
  192
  291
  291
  291
  392
  392
  392
  392
   99
(108 rows)

                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?))
   ->  WindowAgg
         Output: sum(smallint_test) OVER (?)
         ->  Sort
               Output: smallint_test, integer_test
               Sort Key: select_hash1_tb_part_1.integer_test
               ->  PX Hash 2:2  (slice2; segments: 2)
                     Output: smallint_test, integer_test
                     Hash Key: integer_test
                     ->  Partial Seq Scan on result_hash_filter.select_hash1_tb_part_1
                           Output: smallint_test, integer_test
 Optimizer: PolarDB PX Optimizer
(13 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test ) AS sum2
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 
------+------
   21 |  329
   21 |  329
   54 |  329
  105 |  329
  166 |  329
  150 |  329
   95 |  329
   61 |  337
   33 |  337
  291 |  337
  291 |  337
   98 |  337
   41 |  258
   85 |  258
   81 |  258
    5 |  258
   21 |  258
   25 |  258
  232 |  570
   20 |  570
   42 |  570
   62 |  570
   82 |  570
  108 |  570
  392 |  570
  392 |  570
   66 |  570
   92 |  448
   80 |  448
   24 |  448
   56 |  448
   60 |  448
   36 |  448
   40 |  448
  132 |  448
  132 |  448
   20 |  340
  192 |  340
   16 |  340
   52 |  340
   84 |  340
  132 |  340
   56 |  340
   11 |  441
   31 |  441
    3 |  441
   71 |  441
   21 |  441
   38 |  441
  105 |  441
  150 |  441
   54 |  441
   63 |  441
   99 |  441
  146 |  387
   13 |  387
   90 |  387
   98 |  387
   89 |  387
  106 |  387
   65 |  387
  176 |  280
  176 |  280
   32 |  280
   64 |  280
   16 |  280
  392 |  282
   30 |  282
   94 |  282
  232 |  282
    6 |  282
  146 |  338
    1 |  338
   69 |  338
  291 |  338
  106 |  338
   90 |  338
  192 |  116
   12 |  116
   16 |  116
  232 |  412
   20 |  412
   52 |  412
   34 |  412
  108 |  412
  232 |  412
  148 |  412
  392 |  412
  166 |  306
   43 |  306
  134 |  306
   55 |  306
   38 |  306
   78 |  306
  148 |  258
   50 |  258
   52 |  258
   22 |  258
    6 |  258
    6 |  258
    6 |  258
   76 |  258
   76 |  258
  102 |  243
   78 |  243
  102 |  243
  134 |  243
  105 |  243
(108 rows)

                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
         ->  Sort
               Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.char_size_test
               ->  Result
                     Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
                     HashFilter: workers=2, nattrs=1
                     ->  WindowAgg
                           Output: integer_test, char_size_test, sum(smallint_test) OVER (?)
                           ->  Sort
                                 Output: smallint_test, integer_test, char_size_test
                                 Sort Key: select_hash1_tb_part_1.integer_test
                                 ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                       Output: smallint_test, integer_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(18 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test ) AS sum2,
       sum(decimal_test) OVER (PARTITION BY smallint_test ) AS sum3
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 |  sum3   
------+------+---------
    1 |  338 |  250.49
    6 |  282 |  904.38
    6 |  258 |  904.38
    6 |  258 |  904.38
    3 |  441 |  800.15
    5 |  258 | 1414.15
    6 |  258 | 1825.47
   21 |  329 | 6000.69
   21 |  329 | 6000.69
   21 |  441 | 6000.69
   16 |  280 |   20.42
   16 |  116 |   20.42
   20 |  570 |   70.30
   20 |  412 |   70.30
   11 |  441 |   38.49
   12 |  116 |   40.48
   13 |  387 |   48.15
   16 |  340 |   58.12
   38 |  441 |  360.92
   38 |  306 |  360.92
   20 |  340 |  200.49
   21 |  258 |  250.49
   22 |  258 |  301.46
   24 |  448 | 1110.47
   25 |  258 | 1414.15
   52 |  412 | 3650.94
   52 |  258 | 3650.94
   54 |  329 | 4000.46
   54 |  441 | 4000.46
   56 |  448 |   20.42
   56 |  340 |   20.42
   30 |  282 |   35.15
   31 |  441 |   38.49
   32 |  280 |   40.48
   33 |  337 |   48.15
   34 |  412 |   50.49
  105 |  441 |  165.45
  105 |  329 |  165.45
  105 |  243 |  165.45
   36 |  448 |   58.12
   76 |  258 |  180.92
   76 |  258 |  180.92
   78 |  243 |  360.92
   78 |  306 |  360.92
   40 |  448 |  200.49
   41 |  258 |  250.49
   42 |  570 |  301.46
   43 |  306 |  800.15
  132 |  340 | 3331.41
  132 |  448 | 3331.41
  132 |  448 | 3331.41
   90 |  387 | 2828.30
   90 |  338 | 2828.30
   98 |  337 |   42.52
   98 |  387 |   42.52
   50 |  258 |   35.15
  102 |  243 |   76.98
  102 |  243 |   76.98
   52 |  340 |   40.48
  106 |  338 |   96.30
  106 |  387 |   96.30
  108 |  570 |  100.98
  108 |  412 |  100.98
   55 |  306 |   55.15
  232 |  570 |  361.84
  232 |  412 |  361.84
  232 |  412 |  361.84
  232 |  282 |  361.84
   60 |  448 |  200.49
   61 |  337 |  250.49
   62 |  570 |  301.46
   63 |  441 |  800.15
   64 |  280 | 1110.47
   65 |  387 | 1414.15
   66 |  570 | 1825.47
  134 |  243 | 4000.46
  134 |  306 | 4000.46
   69 |  338 |   21.26
   71 |  441 |   38.49
  146 |  387 |   96.30
  146 |  338 |   96.30
  148 |  412 |  100.98
  148 |  258 |  100.98
  150 |  441 |  110.30
  150 |  329 |  110.30
   80 |  448 |  200.49
   81 |  258 |  250.49
   82 |  570 |  301.46
  166 |  329 | 1600.30
  166 |  306 | 1600.30
   84 |  340 | 1110.47
   85 |  258 | 1414.15
  176 |  280 |   20.42
  176 |  280 |   20.42
   89 |  387 |   21.26
   92 |  448 |   40.48
   94 |  282 |   50.49
   95 |  329 |   55.15
  192 |  340 |  116.24
  192 |  116 |  116.24
  291 |  337 |  241.38
  291 |  337 |  241.38
  291 |  338 |  241.38
  392 |  570 |  361.84
  392 |  412 |  361.84
  392 |  282 |  361.84
  392 |  570 |  361.84
   99 |  441 |  180.46
(108 rows)

                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?)), (sum(decimal_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?)), sum(decimal_test) OVER (?)
         ->  Sort
               Output: smallint_test, decimal_test, (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.smallint_test
               ->  PX Hash 2:2  (slice2; segments: 2)
                     Output: smallint_test, decimal_test, (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
                     Hash Key: smallint_test
                     ->  WindowAgg
                           Output: smallint_test, decimal_test, (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
                           ->  Sort
                                 Output: smallint_test, integer_test, decimal_test, char_size_test, (sum(smallint_test) OVER (?))
                                 Sort Key: select_hash1_tb_part_1.char_size_test
                                 ->  Result
                                       Output: smallint_test, integer_test, decimal_test, char_size_test, (sum(smallint_test) OVER (?))
                                       HashFilter: workers=2, nattrs=1
                                       ->  WindowAgg
                                             Output: smallint_test, integer_test, decimal_test, char_size_test, sum(smallint_test) OVER (?)
                                             ->  Sort
                                                   Output: smallint_test, integer_test, decimal_test, char_size_test
                                                   Sort Key: select_hash1_tb_part_1.integer_test
                                                   ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                                         Output: smallint_test, integer_test, decimal_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(26 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test ) AS sum2
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 
------+------
   21 |  329
   21 |  329
   54 |  329
  105 |  329
  166 |  329
  150 |  329
   95 |  329
   61 |  337
   33 |  337
  291 |  337
  291 |  337
   98 |  337
   41 |  258
   85 |  258
   81 |  258
    5 |  258
   21 |  258
   25 |  258
  232 |  570
   20 |  570
   42 |  570
   62 |  570
   82 |  570
  108 |  570
  392 |  570
  392 |  570
   66 |  570
   92 |  448
   80 |  448
   24 |  448
   56 |  448
   60 |  448
   36 |  448
   40 |  448
  132 |  448
  132 |  448
   20 |  340
  192 |  340
   16 |  340
   52 |  340
   84 |  340
  132 |  340
   56 |  340
   11 |  441
   31 |  441
    3 |  441
   71 |  441
   21 |  441
   38 |  441
  105 |  441
  150 |  441
   54 |  441
   63 |  441
   99 |  441
  146 |  387
   13 |  387
   90 |  387
   98 |  387
   89 |  387
  106 |  387
   65 |  387
  176 |  280
  176 |  280
   32 |  280
   64 |  280
   16 |  280
  392 |  282
   30 |  282
   94 |  282
  232 |  282
    6 |  282
  146 |  338
    1 |  338
   69 |  338
  291 |  338
  106 |  338
   90 |  338
  192 |  116
   12 |  116
   16 |  116
  232 |  412
   20 |  412
   52 |  412
   34 |  412
  108 |  412
  232 |  412
  148 |  412
  392 |  412
  166 |  306
   43 |  306
  134 |  306
   55 |  306
   38 |  306
   78 |  306
  148 |  258
   50 |  258
   52 |  258
   22 |  258
    6 |  258
    6 |  258
    6 |  258
   76 |  258
   76 |  258
  102 |  243
   78 |  243
  102 |  243
  134 |  243
  105 |  243
(108 rows)

                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
         ->  Sort
               Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.char_size_test
               ->  Result
                     Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
                     HashFilter: workers=2, nattrs=1
                     ->  WindowAgg
                           Output: integer_test, char_size_test, sum(smallint_test) OVER (?)
                           ->  Sort
                                 Output: smallint_test, integer_test, char_size_test
                                 Sort Key: select_hash1_tb_part_1.integer_test
                                 ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                       Output: smallint_test, integer_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(18 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test, number_test ) AS sum2
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 
------+------
   21 |    7
   95 |   95
  150 |  102
   54 |  102
   21 |   90
  166 |   90
  105 |   35
   61 |   61
  291 |   97
  291 |  146
   98 |  146
   33 |   33
   85 |   85
   21 |  107
   81 |  107
    5 |  107
   25 |   66
   41 |   66
  232 |   58
  392 |  190
   82 |  190
   20 |  190
   62 |  160
  392 |  160
   66 |  162
  108 |  162
   42 |  162
  132 |   44
   40 |  120
   80 |  120
   24 |   84
   60 |   84
   36 |   36
   92 |   92
   56 |   28
  132 |   44
   20 |   64
  132 |   64
  192 |   96
   56 |   28
   84 |   84
   52 |   68
   16 |   68
  150 |   75
   21 |  113
   71 |  113
  105 |  113
   31 |   50
   38 |   50
   54 |  200
   11 |  200
   63 |  200
   99 |  200
    3 |    3
  146 |  118
   90 |  118
   13 |   13
   98 |   49
   65 |  118
  106 |  118
   89 |   89
  176 |  152
   64 |  152
   32 |   40
   16 |   40
  176 |   88
  232 |   58
  392 |   98
    6 |   32
   30 |   32
   94 |   94
  291 |  171
    1 |  171
  146 |  171
  106 |   53
   69 |  114
   90 |  114
   16 |    8
  192 |  108
   12 |  108
  232 |   58
   52 |   80
  108 |   80
   34 |  200
  232 |  200
  392 |  200
   20 |  200
  148 |   74
  134 |   67
   78 |   39
   43 |  117
   55 |  117
   38 |  117
  166 |   83
    6 |   52
   50 |   52
    6 |    6
   76 |   40
    6 |   40
  148 |  138
   76 |  138
   52 |  138
   22 |   22
   78 |   39
  105 |   86
  102 |   86
  102 |  118
  134 |  118
(108 rows)

                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
         ->  Sort
               Output: number_test, integer_test, char_size_test, (sum(smallint_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.char_size_test, select_hash1_tb_part_1.number_test
               ->  Result
                     Output: number_test, integer_test, char_size_test, (sum(smallint_test) OVER (?))
                     HashFilter: workers=2, nattrs=2
                     ->  WindowAgg
                           Output: number_test, integer_test, char_size_test, sum(smallint_test) OVER (?)
                           ->  Sort
                                 Output: number_test, smallint_test, integer_test, char_size_test
                                 Sort Key: select_hash1_tb_part_1.integer_test
                                 ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                       Output: number_test, smallint_test, integer_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(18 rows)

set polar_px_enable_result_hash_filter = 0;
SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 
------
    1
    6
    6
    6
    3
    5
    6
   21
   21
   21
   16
   16
   20
   20
   11
   12
   13
   16
   38
   38
   20
   21
   22
   24
   25
   52
   52
   54
   54
   56
   56
   30
   31
   32
   33
   34
  105
  105
  105
   36
   76
   76
   78
   78
   40
   41
   42
   43
  132
  132
  132
   90
   90
   98
   98
   50
  102
  102
   52
  106
  106
  108
  108
   55
  232
  232
  232
  232
   60
   61
   62
   63
   64
   65
   66
  134
  134
   69
   71
  146
  146
  148
  148
  150
  150
   80
   81
   82
  166
  166
   84
   85
  176
  176
   89
   92
   94
   95
  192
  192
  291
  291
  291
  392
  392
  392
  392
   99
(108 rows)

                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?))
   ->  WindowAgg
         Output: sum(smallint_test) OVER (?)
         ->  Sort
               Output: smallint_test, integer_test
               Sort Key: select_hash1_tb_part_1.integer_test
               ->  PX Hash 2:2  (slice2; segments: 2)
                     Output: smallint_test, integer_test
                     Hash Key: integer_test
                     ->  Partial Seq Scan on result_hash_filter.select_hash1_tb_part_1
                           Output: smallint_test, integer_test
 Optimizer: PolarDB PX Optimizer
(13 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test ) AS sum2
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 
------+------
   21 |  329
   21 |  329
   54 |  329
  105 |  329
  166 |  329
  150 |  329
   95 |  329
   61 |  337
   33 |  337
  291 |  337
  291 |  337
   98 |  337
   41 |  258
   85 |  258
   81 |  258
    5 |  258
   21 |  258
   25 |  258
  232 |  570
   20 |  570
   42 |  570
   62 |  570
   82 |  570
  108 |  570
  392 |  570
  392 |  570
   66 |  570
   92 |  448
   80 |  448
   24 |  448
   56 |  448
   60 |  448
   36 |  448
   40 |  448
  132 |  448
  132 |  448
   20 |  340
  192 |  340
   16 |  340
   52 |  340
   84 |  340
  132 |  340
   56 |  340
   11 |  441
   31 |  441
    3 |  441
   71 |  441
   21 |  441
   38 |  441
  105 |  441
  150 |  441
   54 |  441
   63 |  441
   99 |  441
  146 |  387
   13 |  387
   90 |  387
   98 |  387
   89 |  387
  106 |  387
   65 |  387
  176 |  280
  176 |  280
   32 |  280
   64 |  280
   16 |  280
  392 |  282
   30 |  282
   94 |  282
  232 |  282
    6 |  282
  146 |  338
    1 |  338
   69 |  338
  291 |  338
  106 |  338
   90 |  338
  192 |  116
   12 |  116
   16 |  116
  232 |  412
   20 |  412
   52 |  412
   34 |  412
  108 |  412
  232 |  412
  148 |  412
  392 |  412
  166 |  306
   43 |  306
  134 |  306
   55 |  306
   38 |  306
   78 |  306
  148 |  258
   50 |  258
   52 |  258
   22 |  258
    6 |  258
    6 |  258
    6 |  258
   76 |  258
   76 |  258
  102 |  243
   78 |  243
  102 |  243
  134 |  243
  105 |  243
(108 rows)

                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
         ->  Sort
               Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.char_size_test
               ->  PX Hash 1:2  (slice2; segments: 1)
                     Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
                     Hash Key: char_size_test
                     ->  WindowAgg
                           Output: integer_test, char_size_test, sum(smallint_test) OVER (?)
                           ->  Sort
                                 Output: smallint_test, integer_test, char_size_test
                                 Sort Key: select_hash1_tb_part_1.integer_test
                                 ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                       Output: smallint_test, integer_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(18 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test ) AS sum2,
       sum(decimal_test) OVER (PARTITION BY smallint_test ) AS sum3
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 |  sum3   
------+------+---------
    1 |  338 |  250.49
    6 |  282 |  904.38
    6 |  258 |  904.38
    6 |  258 |  904.38
    3 |  441 |  800.15
    5 |  258 | 1414.15
    6 |  258 | 1825.47
   21 |  329 | 6000.69
   21 |  329 | 6000.69
   21 |  441 | 6000.69
   16 |  280 |   20.42
   16 |  116 |   20.42
   20 |  570 |   70.30
   20 |  412 |   70.30
   11 |  441 |   38.49
   12 |  116 |   40.48
   13 |  387 |   48.15
   16 |  340 |   58.12
   38 |  441 |  360.92
   38 |  306 |  360.92
   20 |  340 |  200.49
   21 |  258 |  250.49
   22 |  258 |  301.46
   24 |  448 | 1110.47
   25 |  258 | 1414.15
   52 |  412 | 3650.94
   52 |  258 | 3650.94
   54 |  329 | 4000.46
   54 |  441 | 4000.46
   56 |  448 |   20.42
   56 |  340 |   20.42
   30 |  282 |   35.15
   31 |  441 |   38.49
   32 |  280 |   40.48
   33 |  337 |   48.15
   34 |  412 |   50.49
  105 |  441 |  165.45
  105 |  329 |  165.45
  105 |  243 |  165.45
   36 |  448 |   58.12
   76 |  258 |  180.92
   76 |  258 |  180.92
   78 |  243 |  360.92
   78 |  306 |  360.92
   40 |  448 |  200.49
   41 |  258 |  250.49
   42 |  570 |  301.46
   43 |  306 |  800.15
  132 |  340 | 3331.41
  132 |  448 | 3331.41
  132 |  448 | 3331.41
   90 |  387 | 2828.30
   90 |  338 | 2828.30
   98 |  337 |   42.52
   98 |  387 |   42.52
   50 |  258 |   35.15
  102 |  243 |   76.98
  102 |  243 |   76.98
   52 |  340 |   40.48
  106 |  338 |   96.30
  106 |  387 |   96.30
  108 |  570 |  100.98
  108 |  412 |  100.98
   55 |  306 |   55.15
  232 |  570 |  361.84
  232 |  412 |  361.84
  232 |  412 |  361.84
  232 |  282 |  361.84
   60 |  448 |  200.49
   61 |  337 |  250.49
   62 |  570 |  301.46
   63 |  441 |  800.15
   64 |  280 | 1110.47
   65 |  387 | 1414.15
   66 |  570 | 1825.47
  134 |  243 | 4000.46
  134 |  306 | 4000.46
   69 |  338 |   21.26
   71 |  441 |   38.49
  146 |  387 |   96.30
  146 |  338 |   96.30
  148 |  412 |  100.98
  148 |  258 |  100.98
  150 |  441 |  110.30
  150 |  329 |  110.30
   80 |  448 |  200.49
   81 |  258 |  250.49
   82 |  570 |  301.46
  166 |  329 | 1600.30
  166 |  306 | 1600.30
   84 |  340 | 1110.47
   85 |  258 | 1414.15
  176 |  280 |   20.42
  176 |  280 |   20.42
   89 |  387 |   21.26
   92 |  448 |   40.48
   94 |  282 |   50.49
   95 |  329 |   55.15
  192 |  340 |  116.24
  192 |  116 |  116.24
  291 |  337 |  241.38
  291 |  337 |  241.38
  291 |  338 |  241.38
  392 |  570 |  361.84
  392 |  412 |  361.84
  392 |  282 |  361.84
  392 |  570 |  361.84
   99 |  441 |  180.46
(108 rows)

                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?)), (sum(decimal_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?)), sum(decimal_test) OVER (?)
         ->  Sort
               Output: smallint_test, decimal_test, (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.smallint_test
               ->  PX Hash 2:2  (slice2; segments: 2)
                     Output: smallint_test, decimal_test, (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
                     Hash Key: smallint_test
                     ->  WindowAgg
                           Output: smallint_test, decimal_test, (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
                           ->  Sort
                                 Output: smallint_test, integer_test, decimal_test, char_size_test, (sum(smallint_test) OVER (?))
                                 Sort Key: select_hash1_tb_part_1.char_size_test
                                 ->  PX Hash 1:2  (slice3; segments: 1)
                                       Output: smallint_test, integer_test, decimal_test, char_size_test, (sum(smallint_test) OVER (?))
                                       Hash Key: char_size_test
                                       ->  WindowAgg
                                             Output: smallint_test, integer_test, decimal_test, char_size_test, sum(smallint_test) OVER (?)
                                             ->  Sort
                                                   Output: smallint_test, integer_test, decimal_test, char_size_test
                                                   Sort Key: select_hash1_tb_part_1.integer_test
                                                   ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                                         Output: smallint_test, integer_test, decimal_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(26 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test ) AS sum2
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 
------+------
   21 |  329
   21 |  329
   54 |  329
  105 |  329
  166 |  329
  150 |  329
   95 |  329
   61 |  337
   33 |  337
  291 |  337
  291 |  337
   98 |  337
   41 |  258
   85 |  258
   81 |  258
    5 |  258
   21 |  258
   25 |  258
  232 |  570
   20 |  570
   42 |  570
   62 |  570
   82 |  570
  108 |  570
  392 |  570
  392 |  570
   66 |  570
   92 |  448
   80 |  448
   24 |  448
   56 |  448
   60 |  448
   36 |  448
   40 |  448
  132 |  448
  132 |  448
   20 |  340
  192 |  340
   16 |  340
   52 |  340
   84 |  340
  132 |  340
   56 |  340
   11 |  441
   31 |  441
    3 |  441
   71 |  441
   21 |  441
   38 |  441
  105 |  441
  150 |  441
   54 |  441
   63 |  441
   99 |  441
  146 |  387
   13 |  387
   90 |  387
   98 |  387
   89 |  387
  106 |  387
   65 |  387
  176 |  280
  176 |  280
   32 |  280
   64 |  280
   16 |  280
  392 |  282
   30 |  282
   94 |  282
  232 |  282
    6 |  282
  146 |  338
    1 |  338
   69 |  338
  291 |  338
  106 |  338
   90 |  338
  192 |  116
   12 |  116
   16 |  116
  232 |  412
   20 |  412
   52 |  412
   34 |  412
  108 |  412
  232 |  412
  148 |  412
  392 |  412
  166 |  306
   43 |  306
  134 |  306
   55 |  306
   38 |  306
   78 |  306
  148 |  258
   50 |  258
   52 |  258
   22 |  258
    6 |  258
    6 |  258
    6 |  258
   76 |  258
   76 |  258
  102 |  243
   78 |  243
  102 |  243
  134 |  243
  105 |  243
(108 rows)

                                           QUERY PLAN                                           
------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
         ->  Sort
               Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.char_size_test
               ->  PX Hash 1:2  (slice2; segments: 1)
                     Output: integer_test, char_size_test, (sum(smallint_test) OVER (?))
                     Hash Key: char_size_test
                     ->  WindowAgg
                           Output: integer_test, char_size_test, sum(smallint_test) OVER (?)
                           ->  Sort
                                 Output: smallint_test, integer_test, char_size_test
                                 Sort Key: select_hash1_tb_part_1.integer_test
                                 ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                       Output: smallint_test, integer_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(18 rows)

SELECT sum(smallint_test) OVER (PARTITION BY integer_test ) AS sum1,
       sum(integer_test) OVER (PARTITION BY char_size_test, number_test ) AS sum2
FROM select_hash1_tb_part_1
WHERE 'David!' LIKE 'David_'
OR 'David_' NOT LIKE 'abc';
 sum1 | sum2 
------+------
   21 |    7
   95 |   95
  150 |  102
   54 |  102
   21 |   90
  166 |   90
  105 |   35
   61 |   61
  291 |   97
  291 |  146
   98 |  146
   33 |   33
   85 |   85
   21 |  107
   81 |  107
    5 |  107
   25 |   66
   41 |   66
  232 |   58
  392 |  190
   82 |  190
   20 |  190
   62 |  160
  392 |  160
   66 |  162
  108 |  162
   42 |  162
  132 |   44
   40 |  120
   80 |  120
   24 |   84
   60 |   84
   36 |   36
   92 |   92
   56 |   28
  132 |   44
   20 |   64
  132 |   64
  192 |   96
   56 |   28
   84 |   84
   52 |   68
   16 |   68
  150 |   75
   21 |  113
   71 |  113
  105 |  113
   31 |   50
   38 |   50
   54 |  200
   11 |  200
   63 |  200
   99 |  200
    3 |    3
  146 |  118
   90 |  118
   13 |   13
   98 |   49
   65 |  118
  106 |  118
   89 |   89
  176 |  152
   64 |  152
   32 |   40
   16 |   40
  176 |   88
  232 |   58
  392 |   98
    6 |   32
   30 |   32
   94 |   94
  291 |  171
    1 |  171
  146 |  171
  106 |   53
   69 |  114
   90 |  114
   16 |    8
  192 |  108
   12 |  108
  232 |   58
   52 |   80
  108 |   80
   34 |  200
  232 |  200
  392 |  200
   20 |  200
  148 |   74
  134 |   67
   78 |   39
   43 |  117
   55 |  117
   38 |  117
  166 |   83
    6 |   52
   50 |   52
    6 |    6
   76 |   40
    6 |   40
  148 |  138
   76 |  138
   52 |  138
   22 |   22
   78 |   39
  105 |   86
  102 |   86
  102 |  118
  134 |  118
(108 rows)

                                                QUERY PLAN                                                
----------------------------------------------------------------------------------------------------------
 PX Coordinator 2:1  (slice1; segments: 2)
   Output: (sum(smallint_test) OVER (?)), (sum(integer_test) OVER (?))
   ->  WindowAgg
         Output: (sum(smallint_test) OVER (?)), sum(integer_test) OVER (?)
         ->  Sort
               Output: number_test, integer_test, char_size_test, (sum(smallint_test) OVER (?))
               Sort Key: select_hash1_tb_part_1.char_size_test, select_hash1_tb_part_1.number_test
               ->  PX Hash 1:2  (slice2; segments: 1)
                     Output: number_test, integer_test, char_size_test, (sum(smallint_test) OVER (?))
                     Hash Key: char_size_test, number_test
                     ->  WindowAgg
                           Output: number_test, integer_test, char_size_test, sum(smallint_test) OVER (?)
                           ->  Sort
                                 Output: number_test, smallint_test, integer_test, char_size_test
                                 Sort Key: select_hash1_tb_part_1.integer_test
                                 ->  Full Seq Scan on result_hash_filter.select_hash1_tb_part_1
                                       Output: number_test, smallint_test, integer_test, char_size_test
 Optimizer: PolarDB PX Optimizer
(18 rows)

-- start_ignore
set client_min_messages='warning';
DROP SCHEMA result_hash_filter CASCADE;
-- end_ignore
