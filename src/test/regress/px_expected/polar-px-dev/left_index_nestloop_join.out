--
-- orca_linlj tests
--
-- Mask out Log & timestamp for orca message that has feature not supported.
-- start_matchsubs
-- m/^LOG.*\"Feature/
-- s/^LOG.*\"Feature/\"Feature/
-- end_matchsubs
/*--EXPLAIN_QUERY_BEGIN*/
create schema orca_linlj;
SET search_path to orca_linlj;
drop table t3 cascade;
ERROR:  table "t3" does not exist
CREATE TABLE t3 (c1 int, c2 character varying(100) NOT NULL, c3 character varying(100) NOT NULL, c4 character varying(100) NOT NULL, c5 character varying(100) NOT NULL, c6 character varying(100) NOT NULL, c7 character varying(100) NOT NULL, c8 character varying(100) NOT NULL, c9 character varying(100) NOT NULL, c10 character varying(100) NOT NULL);
insert into t3 select generate_series(1,1000),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20);
drop table t4 cascade;
ERROR:  table "t4" does not exist
CREATE TABLE t4 (c1 int, c2 character varying(100) NOT NULL, c3 character varying(100) NOT NULL, c4 character varying(100) NOT NULL, c5 character varying(100) NOT NULL, c6 character varying(100) NOT NULL, c7 character varying(100) NOT NULL, c8 character varying(100) NOT NULL, c9 character varying(100) NOT NULL, c10 char(100));
insert into t4 select generate_series(5,1000),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20),repeat('hello',20);
--select 1.0*pg_relation_size('t4') /1024/1024;
ANALYZE t3;
ANALYZE t4;
set polar_px_scan_unit_size=1;
set polar_px_optimizer_enable_hashjoin=0;
set polar_px_optimizer_enable_bitmapscan=0;
set polar_px_enable_left_index_nestloop_join=1;
--left
SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
left join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    1 |     
    2 |     
    3 |     
    4 |     
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
(10 rows)

                                                                                                                                                          QUERY PLAN                                                                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop Left Join
                           Output: t3.c1, t4.c1
                           Join Filter: (((t3.c2)::text = (t4.c2)::text) AND (t3.c1 = t4.c1))
                           ->  Partial Seq Scan on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Filter: (((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND (t3.c1 < 100) AND ((t3.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                           ->  Materialize
                                 Output: t4.c1, t4.c2
                                 ->  PX Broadcast 6:6  (slice2; segments: 6)
                                       Output: t4.c1, t4.c2
                                       ->  Partial Seq Scan on orca_linlj.t4
                                             Output: t4.c1, t4.c2
                                             Filter: ((t4.c1 < 100) AND ((t4.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
 Optimizer: PolarDB PX Optimizer
(24 rows)

SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
left join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
--where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    1 |     
    2 |     
    3 |     
    4 |     
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
(10 rows)

                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop Left Join
                           Output: t3.c1, t4.c1
                           Join Filter: (((t3.c2)::text = (t4.c2)::text) AND (t3.c1 = t4.c1))
                           ->  Partial Seq Scan on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Filter: (((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND (t3.c1 < 100))
                           ->  Materialize
                                 Output: t4.c1, t4.c2
                                 ->  PX Broadcast 6:6  (slice2; segments: 6)
                                       Output: t4.c1, t4.c2
                                       ->  Partial Seq Scan on orca_linlj.t4
                                             Output: t4.c1, t4.c2
                                             Filter: (t4.c1 < 100)
 Optimizer: PolarDB PX Optimizer
(24 rows)

--inner
SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                                                                                          QUERY PLAN                                                                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop
                           Output: t3.c1, t4.c1
                           Join Filter: (((t3.c2)::text = (t4.c2)::text) AND (t3.c1 = t4.c1))
                           ->  Partial Seq Scan on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Filter: (((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND (t3.c1 < 100) AND ((t3.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                           ->  Materialize
                                 Output: t4.c1, t4.c2
                                 ->  PX Broadcast 6:6  (slice2; segments: 6)
                                       Output: t4.c1, t4.c2
                                       ->  Partial Seq Scan on orca_linlj.t4
                                             Output: t4.c1, t4.c2
                                             Filter: ((t4.c1 < 100) AND ((t4.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
 Optimizer: PolarDB PX Optimizer
(24 rows)

SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
--where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                         QUERY PLAN                                                                                         
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop
                           Output: t3.c1, t4.c1
                           Join Filter: (((t3.c2)::text = (t4.c2)::text) AND (t3.c1 = t4.c1))
                           ->  Partial Seq Scan on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Filter: (((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND (t3.c1 < 100))
                           ->  Materialize
                                 Output: t4.c1, t4.c2
                                 ->  PX Broadcast 6:6  (slice2; segments: 6)
                                       Output: t4.c1, t4.c2
                                       ->  Partial Seq Scan on orca_linlj.t4
                                             Output: t4.c1, t4.c2
                                             Filter: (t4.c1 < 100)
 Optimizer: PolarDB PX Optimizer
(24 rows)

--right
SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
right join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                                                                                          QUERY PLAN                                                                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop
                           Output: t3.c1, t4.c1
                           Join Filter: (((t3.c2)::text = (t4.c2)::text) AND (t3.c1 = t4.c1))
                           ->  Partial Seq Scan on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Filter: (((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND (t3.c1 < 100) AND ((t3.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                           ->  Materialize
                                 Output: t4.c1, t4.c2
                                 ->  PX Broadcast 6:6  (slice2; segments: 6)
                                       Output: t4.c1, t4.c2
                                       ->  Partial Seq Scan on orca_linlj.t4
                                             Output: t4.c1, t4.c2
                                             Filter: ((t4.c1 < 100) AND ((t4.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
 Optimizer: PolarDB PX Optimizer
(24 rows)

SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
right join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
--where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                               QUERY PLAN                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop Left Join
                           Output: t3.c1, t4.c1
                           Join Filter: (((t3.c2)::text = (t4.c2)::text) AND (t3.c1 = t4.c1))
                           ->  Partial Seq Scan on orca_linlj.t4
                                 Output: t4.c1, t4.c2
                           ->  Materialize
                                 Output: t3.c1, t3.c2
                                 ->  PX Broadcast 6:6  (slice2; segments: 6)
                                       Output: t3.c1, t3.c2
                                       ->  Partial Seq Scan on orca_linlj.t3
                                             Output: t3.c1, t3.c2
                                             Filter: (((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND (t3.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(23 rows)

--use index
CREATE INDEX t3_id4 ON t3 USING btree (c2, c3, c4);
CREATE INDEX t4_id4 ON t4 USING btree (c2);
ANALYZE t3;
ANALYZE t4;
--left
SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
left join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    1 |     
    2 |     
    3 |     
    4 |     
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
(10 rows)

                                                                                                                                                   QUERY PLAN                                                                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop Left Join
                           Output: t3.c1, t4.c1
                           Join Filter: true
                           ->  Partial Index Scan using t3_id4 on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Index Cond: (((t3.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND ((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                                 Filter: (t3.c1 < 100)
                           ->  Full Index Scan using t4_id4 on orca_linlj.t4
                                 Output: t4.c1
                                 Index Cond: (((t4.c2)::text = (t3.c2)::text) AND ((t4.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                                 Filter: ((t3.c1 = t4.c1) AND (t4.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(22 rows)

SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
left join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
--where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    1 |     
    2 |     
    3 |     
    4 |     
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
(10 rows)

                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop Left Join
                           Output: t3.c1, t4.c1
                           Join Filter: true
                           ->  Partial Index Scan using t3_id4 on orca_linlj.t3
                                 Output: t3.c1, t3.c2
                                 Index Cond: ((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text)
                                 Filter: (t3.c1 < 100)
                           ->  Full Index Scan using t4_id4 on orca_linlj.t4
                                 Output: t4.c1
                                 Index Cond: ((t4.c2)::text = (t3.c2)::text)
                                 Filter: ((t3.c1 = t4.c1) AND (t4.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(22 rows)

--inner
SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                                                                                                     QUERY PLAN                                                                                                                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop
                           Output: t3.c1, t4.c1
                           Join Filter: true
                           ->  PX Broadcast 6:6  (slice2; segments: 6)
                                 Output: t4.c1, t4.c2
                                 ->  Partial Index Scan using t4_id4 on orca_linlj.t4
                                       Output: t4.c1, t4.c2
                                       Index Cond: ((t4.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text)
                                       Filter: (t4.c1 < 100)
                           ->  Partial Index Scan using t3_id4 on orca_linlj.t3
                                 Output: t3.c1
                                 Index Cond: (((t3.c2)::text = (t4.c2)::text) AND ((t3.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND ((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                                 Filter: ((t3.c1 = t4.c1) AND (t3.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(24 rows)

SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
--where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                    QUERY PLAN                                                                                    
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop
                           Output: t3.c1, t4.c1
                           Join Filter: true
                           ->  PX Broadcast 6:6  (slice2; segments: 6)
                                 Output: t3.c1, t3.c2
                                 ->  Partial Index Scan using t3_id4 on orca_linlj.t3
                                       Output: t3.c1, t3.c2
                                       Index Cond: ((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text)
                                       Filter: (t3.c1 < 100)
                           ->  Partial Index Scan using t4_id4 on orca_linlj.t4
                                 Output: t4.c1
                                 Index Cond: ((t4.c2)::text = (t3.c2)::text)
                                 Filter: ((t3.c1 = t4.c1) AND (t4.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(24 rows)

--right
SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
right join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                                                                                                     QUERY PLAN                                                                                                                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop
                           Output: t3.c1, t4.c1
                           Join Filter: true
                           ->  PX Broadcast 6:6  (slice2; segments: 6)
                                 Output: t4.c1, t4.c2
                                 ->  Partial Index Scan using t4_id4 on orca_linlj.t4
                                       Output: t4.c1, t4.c2
                                       Index Cond: ((t4.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text)
                                       Filter: (t4.c1 < 100)
                           ->  Partial Index Scan using t3_id4 on orca_linlj.t3
                                 Output: t3.c1
                                 Index Cond: (((t3.c2)::text = (t4.c2)::text) AND ((t3.c2)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text) AND ((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                                 Filter: ((t3.c1 = t4.c1) AND (t3.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(24 rows)

SELECT t31.c1 as t3_1, t4.c1 as t4_1
FROM (
  select * 
  from t3 
  where c4='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
  and c1 < 100
) t31 
right join t4 
on t31.c2=t4.c2 and t31.c1=t4.c1 
--where t31.c2 ='hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello' 
order by t31.c1, t4.c1 
limit 10;
 t3_1 | t4_1 
------+------
    5 |    5
    6 |    6
    7 |    7
    8 |    8
    9 |    9
   10 |   10
   11 |   11
   12 |   12
   13 |   13
   14 |   14
(10 rows)

                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit
   Output: t3.c1, t4.c1
   ->  PX Coordinator 6:1  (slice1; segments: 6)
         Output: t3.c1, t4.c1
         Merge Key: t3.c1, t4.c1
         ->  Limit
               Output: t3.c1, t4.c1
               ->  Sort
                     Output: t3.c1, t4.c1
                     Sort Key: t3.c1, t4.c1
                     ->  Nested Loop Left Join
                           Output: t3.c1, t4.c1
                           Join Filter: true
                           ->  Partial Seq Scan on orca_linlj.t4
                                 Output: t4.c1, t4.c2
                           ->  Full Index Scan using t3_id4 on orca_linlj.t3
                                 Output: t3.c1
                                 Index Cond: (((t3.c2)::text = (t4.c2)::text) AND ((t3.c4)::text = 'hellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohellohello'::text))
                                 Filter: ((t3.c1 = t4.c1) AND (t3.c1 < 100))
 Optimizer: PolarDB PX Optimizer
(20 rows)

-- start_ignore
set client_min_messages='warning';
DROP SCHEMA orca_linlj CASCADE;
-- end_ignore
