import{_ as c,c as d,a,b as n,e as u,w as t,r as p,o as h,d as l}from"./app-HZE5kvva.js";const k={},m={class:"table-of-contents"};function g(o,s){const i=p("Badge"),r=p("ArticleInfo"),e=p("router-link");return h(),d("div",null,[s[6]||(s[6]=a("h1",{id:"polar-login-history-会话访问历史",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#polar-login-history-会话访问历史"},[a("span",null,"polar_login_history 会话访问历史")])],-1)),n(i,{type:"tip",text:"V15 / v15.12.4.0-",vertical:"top"}),n(r,{frontmatter:o.$frontmatter},null,8,["frontmatter"]),a("nav",m,[a("ul",null,[a("li",null,[n(e,{to:"#背景"},{default:t(()=>s[0]||(s[0]=[l("背景")])),_:1})]),a("li",null,[n(e,{to:"#使用"},{default:t(()=>s[1]||(s[1]=[l("使用")])),_:1})]),a("li",null,[n(e,{to:"#原理"},{default:t(()=>s[2]||(s[2]=[l("原理")])),_:1}),a("ul",null,[a("li",null,[n(e,{to:"#内存结构"},{default:t(()=>s[3]||(s[3]=[l("内存结构")])),_:1})]),a("li",null,[n(e,{to:"#持久化"},{default:t(()=>s[4]||(s[4]=[l("持久化")])),_:1})]),a("li",null,[n(e,{to:"#更新时机"},{default:t(()=>s[5]||(s[5]=[l("更新时机")])),_:1})])])])])]),s[7]||(s[7]=u(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>会话访问历史功能，在用户与数据库成功建立会话后，向用户显示其最近一次的访问历史记录，包括日期、时间、IP、应用程序、自上次成功访问以来的失败访问次数。通过这些信息帮助用户检测异常访问行为，比如来自陌生IP或应用程序的访问，有助于及时发现账户盗用或恶意访问等潜在的安全威胁。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>对于用户来说：</p><ul><li><p>安装插件</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> external/polar_login_history</span>
<span class="line"><span class="token function">make</span></span>
<span class="line"><span class="token function">make</span> <span class="token function">install</span></span>
<span class="line"></span></code></pre></div></li><li><p>在数据库运行过程中，可以修改配置参数 <code>shared_preload_libraries</code> 来加载动态库 <code>polar_login_history</code> ，这在重新启动数据库后生效。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">alter</span> system <span class="token keyword">set</span> shared_preload_libraries <span class="token operator">=</span> polar_login_history<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div></li><li><p>在数据库运行过程中，可以修改配置参数 <code>polar_login_history.enable</code> 来启用会话访问历史功能，这在重新启动数据库后生效。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">alter</span> system <span class="token keyword">set</span> polar_login_history<span class="token punctuation">.</span><span class="token keyword">enable</span> <span class="token operator">=</span> <span class="token keyword">on</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div></li><li><p>执行 <code>psql</code> 成功登录数据库后，根据用户是否为首次登录将分别展示如下信息：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-h</span> <span class="token punctuation">[</span>Primary节点所在IP<span class="token punctuation">]</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>Primary节点所在端口号<span class="token punctuation">]</span> <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-U</span> <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;select 1;&quot;</span></span>
<span class="line">INFO:</span>
<span class="line">First login: <span class="token number">2025</span>-04-21 <span class="token number">11</span>:46:54.46897+08 from <span class="token number">127.0</span>.0.1 using psql</span>
<span class="line"> ?column?</span>
<span class="line">----------</span>
<span class="line">        <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-h</span> <span class="token punctuation">[</span>Primary节点所在IP<span class="token punctuation">]</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>Primary节点所在端口号<span class="token punctuation">]</span> <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-U</span> <span class="token punctuation">[</span>用户名<span class="token punctuation">]</span> <span class="token parameter variable">-c</span> <span class="token string">&quot;select 1;&quot;</span></span>
<span class="line">INFO:</span>
<span class="line">Last login: <span class="token number">2025</span>-04-21 <span class="token number">11</span>:46:54.46897+08 from <span class="token number">127.0</span>.0.1 using psql</span>
<span class="line">The number of failures since the last successful login is <span class="token number">0</span></span>
<span class="line"> ?column?</span>
<span class="line">----------</span>
<span class="line">        <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div></li></ul><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h2><h3 id="内存结构" tabindex="-1"><a class="header-anchor" href="#内存结构"><span>内存结构</span></a></h3><p>数据库为每个用户维护一条会话访问历史信息，数据结构如下：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">polar_login_history_info</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">	Oid			useroid<span class="token punctuation">;</span>		<span class="token comment">/* user oid */</span></span>
<span class="line">	TimestampTz logintime<span class="token punctuation">;</span>		<span class="token comment">/* last login time */</span></span>
<span class="line">	<span class="token keyword">char</span>		ip<span class="token punctuation">[</span>POLAR_LOGIN_HISTORY_STRING_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">/* last login ip */</span></span>
<span class="line">	<span class="token keyword">char</span>		application<span class="token punctuation">[</span>POLAR_LOGIN_HISTORY_STRING_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">/* the application used</span>
<span class="line">																 * for the last login */</span></span>
<span class="line">	uint8		failcount<span class="token punctuation">;</span>		<span class="token comment">/* the number of failed login attempts since</span>
<span class="line">								 * the last successful login */</span></span>
<span class="line"><span class="token punctuation">}</span>			polar_login_history_info<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有用户的会话访问历史信息以数组的形式保存在共享内存中。对于给定用户，通过用户OID和数组下标的映射关系，能够查询到该用户的访问历史信息，这种映射关系以哈希表的形式保存在共享内存中。这两种数据结构的大小由配置参数 <code>polar_login_history.maxnum</code> 决定，结构如下：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line"><span class="token keyword">static</span> polar_login_history_array_struct <span class="token operator">*</span> polar_login_history_array <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">static</span> HTAB <span class="token operator">*</span> polar_login_history_hash <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>对于数组，使用自旋锁机制以保护共享数据，避免同一数组元素的并发访问。对于哈希表，使用分区锁机制以减少并发访问的锁冲突，减少对并发性能的影响。</p><h3 id="持久化" tabindex="-1"><a class="header-anchor" href="#持久化"><span>持久化</span></a></h3><p>会话访问历史信息保存在 <code>polar_login_history</code> 文件中。</p><p>在数据库启动过程中，将读取该文件内容并填充至数组 <code>polar_login_history_array</code> 和哈希表 <code>polar_login_history_hash</code> 中。 在数据库关闭过程中，将数组 <code>polar_login_history_array</code> 信息写入文件，此外 <code>polar_worker</code> 进程也会定期写入会话访问历史信息，以防数据库异常崩溃造成数据丢失。</p><h3 id="更新时机" tabindex="-1"><a class="header-anchor" href="#更新时机"><span>更新时机</span></a></h3><p>当数据库调用函数 <code>PostgresMain</code> 处理客户端连接请求时，认为用户开始尝试与数据库建立会话，直到 <code>for (;;)</code> 循环监听客户端请求，此时认为会话建立成功，将成功的会话信息更新至共享内存中，若该过程中出现错误，则在错误处理前将失败的会话信息更新至共享内存中。</p>`,17))])}const b=c(k,[["render",g]]),v=JSON.parse('{"path":"/zh/features/security/polar_login_history.html","title":"polar_login_history 会话访问历史","lang":"zh-CN","frontmatter":{"author":"杨思南","date":"2025/04/21","minute":60},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[{"level":3,"title":"内存结构","slug":"内存结构","link":"#内存结构","children":[]},{"level":3,"title":"持久化","slug":"持久化","link":"#持久化","children":[]},{"level":3,"title":"更新时机","slug":"更新时机","link":"#更新时机","children":[]}]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"zh/features/security/polar_login_history.md"}');export{b as comp,v as data};
