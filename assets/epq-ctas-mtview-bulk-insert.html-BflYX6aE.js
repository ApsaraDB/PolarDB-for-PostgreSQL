import{_ as d,c,a,b as t,e as h,w as l,r as n,o as u,d as s}from"./app-HZE5kvva.js";const f={},g={class:"table-of-contents"};function m(o,e){const p=n("Badge"),i=n("ArticleInfo"),r=n("router-link");return u(),c("div",null,[e[5]||(e[5]=a("h1",{id:"epq-支持创建-刷新物化视图并行加速和批量写入",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#epq-支持创建-刷新物化视图并行加速和批量写入"},[a("span",null,"ePQ 支持创建/刷新物化视图并行加速和批量写入")])],-1)),t(p,{type:"tip",text:"V11 / v1.1.30-",vertical:"top"}),t(i,{frontmatter:o.$frontmatter},null,8,["frontmatter"]),a("nav",g,[a("ul",null,[a("li",null,[t(r,{to:"#背景"},{default:l(()=>e[0]||(e[0]=[s("背景")])),_:1})]),a("li",null,[t(r,{to:"#功能原理介绍"},{default:l(()=>e[1]||(e[1]=[s("功能原理介绍")])),_:1})]),a("li",null,[t(r,{to:"#使用说明"},{default:l(()=>e[2]||(e[2]=[s("使用说明")])),_:1}),a("ul",null,[a("li",null,[t(r,{to:"#epq-并行扫描"},{default:l(()=>e[3]||(e[3]=[s("ePQ 并行扫描")])),_:1})]),a("li",null,[t(r,{to:"#批量写入"},{default:l(()=>e[4]||(e[4]=[s("批量写入")])),_:1})])])])])]),e[6]||(e[6]=h(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p><a href="https://en.wikipedia.org/wiki/Materialized_view" target="_blank" rel="noopener noreferrer">物化视图 (Materialized View)</a> 是一个包含查询结果的数据库对象。与普通的视图不同，物化视图不仅保存视图的定义，还保存了 <a href="https://www.postgresql.org/docs/current/sql-creatematerializedview.html" target="_blank" rel="noopener noreferrer">创建物化视图</a> 时的数据副本。当物化视图的数据与视图定义中的数据不一致时，可以进行 <a href="https://www.postgresql.org/docs/current/sql-refreshmaterializedview.html" target="_blank" rel="noopener noreferrer">物化视图刷新 (Refresh)</a> 保持物化视图中的数据与视图定义一致。物化视图本质上是对视图定义中的查询做预计算，以便于在查询时复用。</p><p><a href="https://www.postgresql.org/docs/current/sql-createtableas.html" target="_blank" rel="noopener noreferrer"><code>CREATE TABLE AS</code></a> 语法用于将一个查询所对应的数据构建为一个新的表，其表结构与查询的输出列完全相同。</p><p><a href="https://www.postgresql.org/docs/current/sql-selectinto.html" target="_blank" rel="noopener noreferrer"><code>SELECT INTO</code></a> 语法用于建立一张新表，并将查询所对应的数据写入表中，而不是将查询到的数据返回给客户端。其表结构与查询的输出列完全相同。</p><h2 id="功能原理介绍" tabindex="-1"><a class="header-anchor" href="#功能原理介绍"><span>功能原理介绍</span></a></h2><p>对于物化视图的创建和刷新，以及 <code>CREATE TABLE AS</code> / <code>SELECT INTO</code> 语法，由于在数据库层面需要完成的工作步骤十分相似，因此 PostgreSQL 内核使用同一套代码逻辑来处理这几种语法。内核执行过程中的主要步骤包含：</p><ol><li>数据扫描：执行视图定义或 <code>CREATE TABLE AS</code> / <code>SELECT INTO</code> 语法中定义的查询，扫描符合查询条件的数据</li><li>数据写入：将上述步骤中扫描到的数据写入到一个新的物化视图 / 表中</li></ol><p>PolarDB for PostgreSQL 对上述两个步骤分别引入了 ePQ 并行扫描和批量数据写入的优化。在需要扫描或写入的数据量较大时，能够显著提升上述 DDL 语法的性能，缩短执行时间：</p><ol><li>ePQ 并行扫描：通过 ePQ 功能，利用多个计算节点的 I/O 带宽和计算资源并行执行视图定义中的查询，提升计算资源和带宽的利用率</li><li>批量写入：不再将扫描到的每一个元组依次写入表或物化视图，而是在内存中攒够一定数量的元组后，一次性批量写入表或物化视图中，减少记录 WAL 日志的开销，降低对页面的锁定频率</li></ol><h2 id="使用说明" tabindex="-1"><a class="header-anchor" href="#使用说明"><span>使用说明</span></a></h2><h3 id="epq-并行扫描" tabindex="-1"><a class="header-anchor" href="#epq-并行扫描"><span>ePQ 并行扫描</span></a></h3><p>将以下参数设置为 <code>ON</code> 即可启用 ePQ 并行扫描来加速上述语法中的查询过程，目前其默认值为 <code>ON</code>。该参数生效的前置条件是 ePQ 特性的总开关 <code>polar_enable_px</code> 被打开。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">SET</span> polar_px_enable_create_table_as <span class="token operator">=</span> <span class="token keyword">ON</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>由于 ePQ 特性的限制，该优化不支持 <code>CREATE TABLE AS ... WITH OIDS</code> 语法。对于该语法的处理流程中将会回退使用 PostgreSQL 内置优化器为 DDL 定义中的查询生成执行计划，并通过 PostgreSQL 的单机执行器完成查询。</p><h3 id="批量写入" tabindex="-1"><a class="header-anchor" href="#批量写入"><span>批量写入</span></a></h3><p>将以下参数设置为 <code>ON</code> 即可启用批量写入来加速上述语法中的写入过程，目前其默认值为 <code>ON</code>。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">SET</span> polar_enable_create_table_as_bulk_insert <span class="token operator">=</span> <span class="token keyword">ON</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div>`,17))])}const b=d(f,[["render",m]]),w=JSON.parse('{"path":"/zh/features/epq/epq-ctas-mtview-bulk-insert.html","title":"ePQ 支持创建/刷新物化视图并行加速和批量写入","lang":"zh-CN","frontmatter":{"author":"棠羽","date":"2023/02/08","minute":10},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"功能原理介绍","slug":"功能原理介绍","link":"#功能原理介绍","children":[]},{"level":2,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[{"level":3,"title":"ePQ 并行扫描","slug":"epq-并行扫描","link":"#epq-并行扫描","children":[]},{"level":3,"title":"批量写入","slug":"批量写入","link":"#批量写入","children":[]}]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"zh/features/epq/epq-ctas-mtview-bulk-insert.md"}');export{b as comp,w as data};
