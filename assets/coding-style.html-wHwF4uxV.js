import{_ as o,c as n,e as t,o as i}from"./app-HZE5kvva.js";const l={};function a(s,e){return i(),n("div",null,e[0]||(e[0]=[t('<h1 id="编码风格" tabindex="-1"><a class="header-anchor" href="#编码风格"><span>编码风格</span></a></h1><div class="hint-container caution"><p class="hint-container-title">警告</p><p>需要翻译</p></div><h2 id="languages" tabindex="-1"><a class="header-anchor" href="#languages"><span>Languages</span></a></h2><ul><li>PostgreSQL kernel, extension, and kernel related tools use C, in order to remain compatible with community versions and to easily upgrade.</li><li>Management related tools can use shell, GO, or Python, for efficient development.</li></ul><h2 id="style" tabindex="-1"><a class="header-anchor" href="#style"><span>Style</span></a></h2><ul><li><p>Coding in C follows PostgreSQL&#39;s programing style, such as naming, error message format, control statements, length of lines, comment format, length of functions and global variables. In detail, please refer to <a href="https://www.postgresql.org/docs/15/source.html" target="_blank" rel="noopener noreferrer">PostgreSQL style</a>. Here is some highlines:</p><ul><li>Code in PostgreSQL should only rely on language features available in the C99 standard</li><li>Do not use <code>//</code> for comments</li><li>Both, macros with arguments and static inline functions, may be used. The latter is preferred only if the former simplifies coding.</li><li>Follow BSD C programming conventions</li></ul></li><li><p>Programs in shell can follow <a href="https://google.github.io/styleguide/shellguide.html" target="_blank" rel="noopener noreferrer">Google code conventions</a></p></li><li><p>Program in Perl can follow official <a href="https://perldoc.perl.org/perlstyle" target="_blank" rel="noopener noreferrer">Perl style</a></p></li></ul><h2 id="code-design-and-review" tabindex="-1"><a class="header-anchor" href="#code-design-and-review"><span>Code design and review</span></a></h2><p>We share the same thought and rules as <a href="https://github.com/google/eng-practices/blob/master/review/index.md" target="_blank" rel="noopener noreferrer">Google Open Source Code Review</a>.</p><p>Before submitting code review, please run unit test and pass all tests under <code>src/test</code>, such as regress and isolation. Unit tests or function tests should be submitted with code modification.</p><p>In addition to code review, this document offers instructions for the whole cycle of high-quality development, from design, implementation, testing, documentation to preparing for code review. Many good questions are asked for critical steps during development, such as about design, function, complexity, testing, naming, documentation, and code review. The documentation summarizes rules for code review as follows. During a code review, you should make sure that:</p><ul><li>The code is well-designed.</li><li>The functionality is good for the users of the code.</li><li>Any UI changes are sensible and look good.</li><li>Any parallel programming is done safely.</li><li>The code isn&#39;t more complex than it needs to be.</li><li>The developer isn&#39;t implementing things they might need in the future but don&#39;t know they need now.</li><li>Code has appropriate unit tests.</li><li>Tests are well-designed.</li><li>The developer used clear names for everything.</li><li>Comments are clear and useful, and mostly explain why instead of what.</li><li>Code is appropriately documented.</li><li>The code conforms to our style guides.</li></ul>',11)]))}const d=o(l,[["render",a]]),c=JSON.parse('{"path":"/zh/contributing/coding-style.html","title":"编码风格","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Languages","slug":"languages","link":"#languages","children":[]},{"level":2,"title":"Style","slug":"style","link":"#style","children":[]},{"level":2,"title":"Code design and review","slug":"code-design-and-review","link":"#code-design-and-review","children":[]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"zh/contributing/coding-style.md"}');export{d as comp,c as data};
