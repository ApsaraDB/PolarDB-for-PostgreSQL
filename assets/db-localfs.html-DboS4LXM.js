import{_ as k,c as b,a,b as p,e as o,w as e,d as s,r as c,o as v}from"./app-HZE5kvva.js";const g={},m={class:"table-of-contents"};function h(d,n){const u=c("ArticleInfo"),i=c("router-link"),r=c("CodeTabs");return v(),b("div",null,[n[27]||(n[27]=a("h1",{id:"基于单机文件系统部署",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#基于单机文件系统部署"},[a("span",null,"基于单机文件系统部署")])],-1)),p(u,{frontmatter:d.$frontmatter},null,8,["frontmatter"]),n[28]||(n[28]=a("p",null,"本文将指导您在单机文件系统（如 ext4）上部署 PolarDB-PG。",-1)),a("nav",m,[a("ul",null,[a("li",null,[p(i,{to:"#基于安装包部署"},{default:e(()=>n[0]||(n[0]=[s("基于安装包部署")])),_:1})]),a("li",null,[p(i,{to:"#基于-docker-镜像部署"},{default:e(()=>n[1]||(n[1]=[s("基于 Docker 镜像部署")])),_:1})]),a("li",null,[p(i,{to:"#基于-docker-镜像-守护脚本部署"},{default:e(()=>n[2]||(n[2]=[s("基于 Docker 镜像 + 守护脚本部署")])),_:1})])])]),n[29]||(n[29]=o('<h2 id="基于安装包部署" tabindex="-1"><a class="header-anchor" href="#基于安装包部署"><span>基于安装包部署</span></a></h2><p>从 GitHub 的 <a href="https://github.com/ApsaraDB/PolarDB-for-PostgreSQL/releases" target="_blank" rel="noopener noreferrer">Release</a> 页面下载符合 CPU 架构和 Linux 发行版的安装包，并安装到系统上。</p><p>创建一个空白的数据目录 <code>${primary_datadir}</code>，用于存放 PolarDB-PG 的数据文件：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">mkdir</span> <span class="token variable">${primary_datadir}</span></span>\n<span class="line"></span></code></pre></div><p>并使用 <code>initdb</code> 程序在 <code>${primary_datadir}</code> 目录下初始化数据库：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">/u01/polardb_pg/bin/initdb <span class="token parameter variable">-k</span> <span class="token parameter variable">-A</span> trust <span class="token parameter variable">-D</span> <span class="token variable">${primary_datadir}</span></span>\n<span class="line"></span></code></pre></div><p>可以在 <code>${primary_datadir}/postgresql.conf</code> 中添加更多配置，然后跟随提示启动数据库：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">/u01/polardb_pg/bin/pg_ctl <span class="token parameter variable">-D</span> <span class="token variable">${primary_datadir}</span> <span class="token parameter variable">-l</span> logfile start</span>\n<span class="line"></span></code></pre></div><h2 id="基于-docker-镜像部署" tabindex="-1"><a class="header-anchor" href="#基于-docker-镜像部署"><span>基于 Docker 镜像部署</span></a></h2><p>首先，拉取 PolarDB-PG 的 <a href="https://hub.docker.com/r/polardb/polardb_pg_binary/tags" target="_blank" rel="noopener noreferrer">二进制镜像</a>，里面已包含 PolarDB-PG 的二进制文件：</p>',10)),p(r,{id:"35",data:[{id:"DockerHub"},{id:"阿里云 ACR"}]},{title0:e(({value:l,isActive:t})=>n[3]||(n[3]=[s("DockerHub")])),title1:e(({value:l,isActive:t})=>n[4]||(n[4]=[s("阿里云 ACR")])),tab0:e(({value:l,isActive:t})=>n[5]||(n[5]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" pull polardb/polardb_pg_binary:15")]),s(`
`),a("span",{class:"line"})])])],-1)])),tab1:e(({value:l,isActive:t})=>n[6]||(n[6]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" pull registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_binary:15")]),s(`
`),a("span",{class:"line"})])])],-1)])),_:1}),n[30]||(n[30]=o('<p>接下来，创建一个空白数据目录：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">mkdir</span> <span class="token variable">${primary_datadir}</span></span>\n<span class="line"></span></code></pre></div><p>创建一个容器，将该目录作为容器的 volumn 挂载到容器内的 <code>/var/polardb</code> 目录下。此外，将该容器的 <code>5432</code> 端口映射到主机。以后台模式启动并进入容器，保持容器运行：</p>',3)),p(r,{id:"50",data:[{id:"DockerHub"},{id:"阿里云 ACR"}]},{title0:e(({value:l,isActive:t})=>n[7]||(n[7]=[s("DockerHub")])),title1:e(({value:l,isActive:t})=>n[8]||(n[8]=[s("阿里云 ACR")])),tab0:e(({value:l,isActive:t})=>n[9]||(n[9]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--name"),s(" polardb "),a("span",{class:"token parameter variable"},"-p"),s(),a("span",{class:"token number"},"5432"),s(":5432 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${primary_datadir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    polardb/polardb_pg_binary:15 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token function"},"sleep"),s(" infinity")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(),a("span",{class:"token builtin class-name"},"exec"),s(),a("span",{class:"token parameter variable"},"-it"),s(" polardb "),a("span",{class:"token function"},"bash")]),s(`
`),a("span",{class:"line"})])])],-1)])),tab1:e(({value:l,isActive:t})=>n[10]||(n[10]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--name"),s(" polardb "),a("span",{class:"token parameter variable"},"-p"),s(),a("span",{class:"token number"},"5432"),s(":5432 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${primary_datadir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_binary:15 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token function"},"sleep"),s(" infinity")]),s(`
`),a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(),a("span",{class:"token builtin class-name"},"exec"),s(),a("span",{class:"token parameter variable"},"-it"),s(" polardb "),a("span",{class:"token function"},"bash")]),s(`
`),a("span",{class:"line"})])])],-1)])),_:1}),n[31]||(n[31]=o(`<p>在容器内初始化数据库：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">/u01/polardb_pg/bin/initdb <span class="token parameter variable">-k</span> <span class="token parameter variable">-A</span> trust <span class="token parameter variable">-D</span> /var/polardb/</span>
<span class="line"></span></code></pre></div><p>类似地，修改 <code>/var/polardb/postgresql.conf</code> 中必要的配置后，在容器内启动数据库：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">/u01/polardb_pg/bin/pg_ctl <span class="token parameter variable">-D</span> /var/polardb/ <span class="token parameter variable">-l</span> logfile start</span>
<span class="line"></span></code></pre></div><h2 id="基于-docker-镜像-守护脚本部署" tabindex="-1"><a class="header-anchor" href="#基于-docker-镜像-守护脚本部署"><span>基于 Docker 镜像 + 守护脚本部署</span></a></h2><p>首先，拉取 PolarDB-PG 的 <a href="https://hub.docker.com/r/polardb/polardb_pg_local_instance/tags" target="_blank" rel="noopener noreferrer">单机实例镜像</a>，里面已包含 PolarDB-PG 单机实例的守护脚本。</p>`,6)),p(r,{id:"72",data:[{id:"DockerHub"},{id:"阿里云 ACR"}]},{title0:e(({value:l,isActive:t})=>n[11]||(n[11]=[s("DockerHub")])),title1:e(({value:l,isActive:t})=>n[12]||(n[12]=[s("阿里云 ACR")])),tab0:e(({value:l,isActive:t})=>n[13]||(n[13]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" pull polardb/polardb_pg_local_instance:15")]),s(`
`),a("span",{class:"line"})])])],-1)])),tab1:e(({value:l,isActive:t})=>n[14]||(n[14]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" pull registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_local_instance:15")]),s(`
`),a("span",{class:"line"})])])],-1)])),_:1}),n[32]||(n[32]=o("<p>新建一个空白目录 <code>${your_data_dir}</code> 作为 PolarDB-PG 实例的数据目录。启动容器时，将该目录作为 volumn 挂载到容器内，对数据目录进行初始化。在初始化的过程中，可以传入环境变量覆盖默认值：</p><ul><li><code>POLARDB_PORT</code>：PolarDB-PG 运行所需要使用的端口号，默认值为 <code>5432</code>；镜像将会使用三个连续的端口号（默认 <code>5432-5434</code>）</li><li><code>POLARDB_USER</code>：初始化数据库时创建默认的 superuser（默认 <code>postgres</code>）</li><li><code>POLARDB_PASSWORD</code>：默认 superuser 的密码</li></ul><p>使用如下命令初始化数据库：</p>",3)),p(r,{id:"103",data:[{id:"DockerHub"},{id:"阿里云 ACR"}]},{title0:e(({value:l,isActive:t})=>n[15]||(n[15]=[s("DockerHub")])),title1:e(({value:l,isActive:t})=>n[16]||(n[16]=[s("阿里云 ACR")])),tab0:e(({value:l,isActive:t})=>n[17]||(n[17]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-it"),s(),a("span",{class:"token parameter variable"},"--rm"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--env"),s(),a("span",{class:"token assign-left variable"},"POLARDB_PORT"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"5432"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--env"),s(),a("span",{class:"token assign-left variable"},"POLARDB_USER"),a("span",{class:"token operator"},"="),s("u1 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--env"),s(),a("span",{class:"token assign-left variable"},"POLARDB_PASSWORD"),a("span",{class:"token operator"},"="),s("your_password "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${your_data_dir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    polardb/polardb_pg_local_instance:15 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token builtin class-name"},"echo"),s(),a("span",{class:"token string"},"'done'")]),s(`
`),a("span",{class:"line"})])])],-1)])),tab1:e(({value:l,isActive:t})=>n[18]||(n[18]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-it"),s(),a("span",{class:"token parameter variable"},"--rm"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--env"),s(),a("span",{class:"token assign-left variable"},"POLARDB_PORT"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"5432"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--env"),s(),a("span",{class:"token assign-left variable"},"POLARDB_USER"),a("span",{class:"token operator"},"="),s("u1 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--env"),s(),a("span",{class:"token assign-left variable"},"POLARDB_PASSWORD"),a("span",{class:"token operator"},"="),s("your_password "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${your_data_dir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_local_instance:15 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token builtin class-name"},"echo"),s(),a("span",{class:"token string"},"'done'")]),s(`
`),a("span",{class:"line"})])])],-1)])),_:1}),n[33]||(n[33]=a("p",null,[s("数据库初始化完毕后，使用 "),a("code",null,"-d"),s(" 参数以后台模式创建容器，启动 PolarDB-PG 服务。通常 PolarDB-PG 的端口需要暴露给外界使用，使用 "),a("code",null,"-p"),s(" 参数将容器内的端口范围暴露到容器外。比如，初始化数据库时使用的是 "),a("code",null,"5432-5434"),s(" 端口，如下命令将会把这三个端口映射到容器外的 "),a("code",null,"54320-54322"),s(" 端口：")],-1)),p(r,{id:"114",data:[{id:"DockerHub"},{id:"阿里云 ACR"}]},{title0:e(({value:l,isActive:t})=>n[19]||(n[19]=[s("DockerHub")])),title1:e(({value:l,isActive:t})=>n[20]||(n[20]=[s("阿里云 ACR")])),tab0:e(({value:l,isActive:t})=>n[21]||(n[21]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-p"),s(),a("span",{class:"token number"},"54320"),s("-54322:5432-5434 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${your_data_dir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},"    polardb/polardb_pg_local_instance:15"),s(`
`),a("span",{class:"line"})])])],-1)])),tab1:e(({value:l,isActive:t})=>n[22]||(n[22]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-p"),s(),a("span",{class:"token number"},"54320"),s("-54322:5432-5434 "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${your_data_dir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},"    registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_local_instance:15"),s(`
`),a("span",{class:"line"})])])],-1)])),_:1}),n[34]||(n[34]=a("p",null,"或者也可以直接让容器与宿主机共享网络：",-1)),p(r,{id:"125",data:[{id:"DockerHub"},{id:"阿里云 ACR"}]},{title0:e(({value:l,isActive:t})=>n[23]||(n[23]=[s("DockerHub")])),title1:e(({value:l,isActive:t})=>n[24]||(n[24]=[s("阿里云 ACR")])),tab0:e(({value:l,isActive:t})=>n[25]||(n[25]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--network"),a("span",{class:"token operator"},"="),s("host "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${your_data_dir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},"    polardb/polardb_pg_local_instance:15"),s(`
`),a("span",{class:"line"})])])],-1)])),tab1:e(({value:l,isActive:t})=>n[26]||(n[26]=[a("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh"},[a("pre",null,[a("code",null,[a("span",{class:"line"},[a("span",{class:"token function"},"docker"),s(" run "),a("span",{class:"token parameter variable"},"-d"),s(),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    --cap-add"),a("span",{class:"token operator"},"="),s("SYS_PTRACE "),a("span",{class:"token parameter variable"},"--privileged"),a("span",{class:"token operator"},"="),s("true "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"--network"),a("span",{class:"token operator"},"="),s("host "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},[s("    "),a("span",{class:"token parameter variable"},"-v"),s(),a("span",{class:"token variable"},"${your_data_dir}"),s(":/var/polardb "),a("span",{class:"token punctuation"},"\\")]),s(`
`),a("span",{class:"line"},"    registry.cn-hangzhou.aliyuncs.com/polardb_pg/polardb_pg_local_instance:15"),s(`
`),a("span",{class:"line"})])])],-1)])),_:1})])}const A=k(g,[["render",h]]),_=JSON.parse('{"path":"/zh/deploying/db-localfs.html","title":"基于单机文件系统部署","lang":"zh-CN","frontmatter":{"author":"棠羽","date":"2024/08/30","minute":15},"headers":[{"level":2,"title":"基于安装包部署","slug":"基于安装包部署","link":"#基于安装包部署","children":[]},{"level":2,"title":"基于 Docker 镜像部署","slug":"基于-docker-镜像部署","link":"#基于-docker-镜像部署","children":[]},{"level":2,"title":"基于 Docker 镜像 + 守护脚本部署","slug":"基于-docker-镜像-守护脚本部署","link":"#基于-docker-镜像-守护脚本部署","children":[]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"zh/deploying/db-localfs.md"}');export{A as comp,_ as data};
