import{_ as i,c as u,a as s,b as n,e as d,w as e,r as o,o as m,d as p}from"./app-HZE5kvva.js";const k={},v={class:"table-of-contents"};function h(r,a){const c=o("ArticleInfo"),t=o("router-link"),l=o("RouteLink");return m(),u("div",null,[a[8]||(a[8]=s("h1",{id:"基于-pfs-文件系统部署",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#基于-pfs-文件系统部署"},[s("span",null,"基于 PFS 文件系统部署")])],-1)),n(c,{frontmatter:r.$frontmatter},null,8,["frontmatter"]),a[9]||(a[9]=s("p",null,"本文将指导您在分布式文件系统 PolarDB File System（PFS）上编译部署 PolarDB-PG，适用于已经在共享存储上格式化并挂载 PFS 文件系统的计算节点。",-1)),s("nav",v,[s("ul",null,[s("li",null,[n(t,{to:"#primary-节点部署"},{default:e(()=>a[0]||(a[0]=[p("Primary 节点部署")])),_:1})]),s("li",null,[n(t,{to:"#replica-节点部署"},{default:e(()=>a[1]||(a[1]=[p("Replica 节点部署")])),_:1})]),s("li",null,[n(t,{to:"#集群检查和测试"},{default:e(()=>a[2]||(a[2]=[p("集群检查和测试")])),_:1})]),s("li",null,[n(t,{to:"#常见运维步骤"},{default:e(()=>a[3]||(a[3]=[p("常见运维步骤")])),_:1})])])]),a[10]||(a[10]=d(`<h2 id="primary-节点部署" tabindex="-1"><a class="header-anchor" href="#primary-节点部署"><span>Primary 节点部署</span></a></h2><p>初始化 Primary 节点的本地数据目录 <code>~/primary/</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">initdb <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/primary</span>
<span class="line"></span></code></pre></div><p>在共享存储的 <code>/nvme1n1/shared_data/</code> 路径上创建共享数据目录，然后使用 <code>polar-initdb.sh</code> 脚本初始化共享数据目录：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 使用 pfs 创建共享数据目录</span></span>
<span class="line"><span class="token function">sudo</span> pfs <span class="token parameter variable">-C</span> disk <span class="token function">mkdir</span> /nvme1n1/shared_data</span>
<span class="line"><span class="token comment"># 初始化 Primary 节点的本地目录和共享目录</span></span>
<span class="line"><span class="token function">sudo</span> polar-initdb.sh <span class="token environment constant">$HOME</span>/primary/ /nvme1n1/shared_data/ primary</span>
<span class="line"><span class="token comment"># 注入配置模板</span></span>
<span class="line"><span class="token function">cat</span> /u01/polardb_pg/share/postgresql/polardb.conf.sample <span class="token operator">&gt;&gt;</span> <span class="token environment constant">$HOME</span>/primary/postgresql.conf</span>
<span class="line"></span></code></pre></div><p>编辑 Primary 节点的配置文件 <code>~/primary/postgresql.conf</code>，增加配置项：</p><div class="language-ini" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">5432</span></span>
<span class="line"><span class="token key attr-name">polar_hostid</span><span class="token punctuation">=</span><span class="token value attr-value">1</span></span>
<span class="line"><span class="token key attr-name">polar_disk_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">nvme1n1</span>&#39;</span></span>
<span class="line"><span class="token key attr-name">polar_datadir</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">/nvme1n1/shared_data/</span>&#39;</span></span>
<span class="line"><span class="token key attr-name">polar_vfs.localfs_mode</span><span class="token punctuation">=</span><span class="token value attr-value">off</span></span>
<span class="line"><span class="token key attr-name">polar_storage_cluster_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">disk</span>&#39;</span></span>
<span class="line"></span></code></pre></div><p>编辑 Primary 节点的客户端认证文件 <code>~/primary/pg_hba.conf</code>，增加以下配置项，允许 Replica 节点进行物理复制：</p><div class="language-ini" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line">host	replication	postgres	0.0.0.0/0	trust</span>
<span class="line"></span></code></pre></div><p>最后，启动 Primary 节点：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pg_ctl start <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/primary</span>
<span class="line"></span></code></pre></div><p>检查 Primary 节点能否正常运行：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-c</span> <span class="token string">&#39;SELECT version();&#39;</span></span>
<span class="line">                                   version</span>
<span class="line">----------------------------------------------------------------------</span>
<span class="line"> PostgreSQL <span class="token number">15</span>.x <span class="token punctuation">(</span>PolarDB <span class="token number">15</span>.x.x.x build xxxxxxxx<span class="token punctuation">)</span> on <span class="token punctuation">{</span>your_platform<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在 Primary 节点上，为对应的 Replica 节点创建相应的复制槽，用于 Replica 节点的物理复制：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-c</span> <span class="token string">&quot;SELECT pg_create_physical_replication_slot(&#39;replica1&#39;);&quot;</span></span>
<span class="line"> pg_create_physical_replication_slot</span>
<span class="line">-------------------------------------</span>
<span class="line"> <span class="token punctuation">(</span>replica1,<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="replica-节点部署" tabindex="-1"><a class="header-anchor" href="#replica-节点部署"><span>Replica 节点部署</span></a></h2><p>在 Replica 节点本地磁盘的 <code>~/replica1</code> 路径下创建一个空目录，然后通过 <code>polar-initdb.sh</code> 脚本使用共享存储上的数据目录来初始化 Replica 节点的本地目录。初始化后的本地目录中没有默认配置文件，所以还需要使用 <code>initdb</code> 创建一个临时的本地目录模板，然后将所有的默认配置文件拷贝到 Replica 节点的本地目录下：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 从共享存储初始化 Replica 节点的本地目录</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-m</span> 0700 <span class="token environment constant">$HOME</span>/replica1</span>
<span class="line">polar-initdb.sh <span class="token environment constant">$HOME</span>/replica1/ /nvme1n1/shared_data/ replica</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 产生配置文件</span></span>
<span class="line">initdb <span class="token parameter variable">-D</span> /tmp/replica1</span>
<span class="line"><span class="token function">cp</span> /tmp/replica1/*.conf <span class="token environment constant">$HOME</span>/replica1/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 注入配置模板</span></span>
<span class="line"><span class="token function">cat</span> /u01/polardb_pg/share/postgresql/polardb.conf.sample <span class="token operator">&gt;&gt;</span> <span class="token environment constant">$HOME</span>/replica1/postgresql.conf</span>
<span class="line"></span></code></pre></div><p>编辑 Replica 节点的配置文件 <code>~/replica1/postgresql.conf</code>，增加配置项：</p><div class="language-ini" data-highlighter="prismjs" data-ext="ini"><pre><code><span class="line"><span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">5433</span></span>
<span class="line"><span class="token key attr-name">polar_hostid</span><span class="token punctuation">=</span><span class="token value attr-value">2</span></span>
<span class="line"><span class="token key attr-name">polar_disk_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">nvme1n1</span>&#39;</span></span>
<span class="line"><span class="token key attr-name">polar_datadir</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">/nvme1n1/shared_data/</span>&#39;</span></span>
<span class="line"><span class="token key attr-name">polar_vfs.localfs_mode</span><span class="token punctuation">=</span><span class="token value attr-value">off</span></span>
<span class="line"><span class="token key attr-name">polar_storage_cluster_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">disk</span>&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># replication</span></span>
<span class="line"><span class="token key attr-name">primary_slot_name</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">replica1</span>&#39;</span></span>
<span class="line"><span class="token key attr-name">primary_conninfo</span><span class="token punctuation">=</span><span class="token value attr-value">&#39;<span class="token inner-value">host=[Primary 节点所在IP] port=5432 user=postgres dbname=postgres application_name=replica1</span>&#39;</span></span>
<span class="line"></span></code></pre></div><p>标识节点以 Replica 模式启动：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">touch</span> <span class="token environment constant">$HOME</span>/replica1/replica.signal</span>
<span class="line"></span></code></pre></div><p>最后，启动 Replica 节点：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pg_ctl start <span class="token parameter variable">-D</span> <span class="token environment constant">$HOME</span>/replica1</span>
<span class="line"></span></code></pre></div><p>检查 Replica 节点能否正常运行：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-c</span> <span class="token string">&#39;SELECT version();&#39;</span></span>
<span class="line">                                   version</span>
<span class="line">----------------------------------------------------------------------</span>
<span class="line"> PostgreSQL <span class="token number">15</span>.x <span class="token punctuation">(</span>PolarDB <span class="token number">15</span>.x.x.x build xxxxxxxx<span class="token punctuation">)</span> on <span class="token punctuation">{</span>your_platform<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="集群检查和测试" tabindex="-1"><a class="header-anchor" href="#集群检查和测试"><span>集群检查和测试</span></a></h2><p>部署完成后，需要进行实例检查和测试，确保 Primary 节点可正常写入数据，Replica 节点可以正常读取。</p><p>登录 Primary 节点，创建测试表并插入样例数据：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-q</span> <span class="token parameter variable">-p</span> <span class="token number">5432</span> <span class="token parameter variable">-d</span> postgres <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-c</span> <span class="token string">&quot;CREATE TABLE t (t1 INT PRIMARY KEY, t2 INT); INSERT INTO t VALUES (1, 1),(2, 3),(3, 3);&quot;</span></span>
<span class="line"></span></code></pre></div><p>登录 Replica 节点，查询刚刚插入的样例数据：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">psql <span class="token parameter variable">-q</span> <span class="token parameter variable">-p</span> <span class="token number">5433</span> <span class="token parameter variable">-d</span> postgres <span class="token parameter variable">-c</span> <span class="token string">&quot;SELECT * FROM t;&quot;</span></span>
<span class="line"> t1 <span class="token operator">|</span> t2</span>
<span class="line">----+----</span>
<span class="line">  <span class="token number">1</span> <span class="token operator">|</span>  <span class="token number">1</span></span>
<span class="line">  <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">3</span></span>
<span class="line">  <span class="token number">3</span> <span class="token operator">|</span>  <span class="token number">3</span></span>
<span class="line"><span class="token punctuation">(</span><span class="token number">3</span> rows<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>在 Primary 节点上插入的数据对 Replica 节点可见，这意味着基于共享存储的 PolarDB-PG 计算节点集群搭建成功。</p><hr><h2 id="常见运维步骤" tabindex="-1"><a class="header-anchor" href="#常见运维步骤"><span>常见运维步骤</span></a></h2>`,35)),s("ul",null,[s("li",null,[n(l,{to:"/zh/operation/backup-and-restore.html"},{default:e(()=>a[4]||(a[4]=[p("备份恢复")])),_:1})]),s("li",null,[n(l,{to:"/zh/operation/grow-storage.html"},{default:e(()=>a[5]||(a[5]=[p("共享存储在线扩容")])),_:1})]),s("li",null,[n(l,{to:"/zh/operation/scale-out.html"},{default:e(()=>a[6]||(a[6]=[p("计算节点扩缩容")])),_:1})]),s("li",null,[n(l,{to:"/zh/operation/ro-online-promote.html"},{default:e(()=>a[7]||(a[7]=[p("Replica 节点在线 Promote")])),_:1})])])])}const b=i(k,[["render",h]]),f=JSON.parse('{"path":"/zh/deploying/db-pfs.html","title":"基于 PFS 文件系统部署","lang":"zh-CN","frontmatter":{"author":"棠羽","date":"2025/01/15","minute":15},"headers":[{"level":2,"title":"Primary 节点部署","slug":"primary-节点部署","link":"#primary-节点部署","children":[]},{"level":2,"title":"Replica 节点部署","slug":"replica-节点部署","link":"#replica-节点部署","children":[]},{"level":2,"title":"集群检查和测试","slug":"集群检查和测试","link":"#集群检查和测试","children":[]},{"level":2,"title":"常见运维步骤","slug":"常见运维步骤","link":"#常见运维步骤","children":[]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"zh/deploying/db-pfs.md"}');export{b as comp,f as data};
