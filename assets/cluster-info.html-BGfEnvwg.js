import{_ as i,c as k,a,b as n,e as d,w as p,r as t,o as u,d as o}from"./app-HZE5kvva.js";const m="/PolarDB-for-PostgreSQL/assets/cluster_info_generate-D8CWFRH0.png",b={},h={class:"table-of-contents"};function f(l,s){const r=t("Badge"),c=t("ArticleInfo"),e=t("router-link");return u(),k("div",null,[s[10]||(s[10]=a("h1",{id:"集群拓扑视图",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#集群拓扑视图"},[a("span",null,"集群拓扑视图")])],-1)),n(r,{type:"tip",text:"V11 / v1.1.20-",vertical:"top"}),n(c,{frontmatter:l.$frontmatter},null,8,["frontmatter"]),a("nav",h,[a("ul",null,[a("li",null,[n(e,{to:"#功能介绍"},{default:p(()=>s[0]||(s[0]=[o("功能介绍")])),_:1})]),a("li",null,[n(e,{to:"#术语"},{default:p(()=>s[1]||(s[1]=[o("术语")])),_:1})]),a("li",null,[n(e,{to:"#功能使用"},{default:p(()=>s[2]||(s[2]=[o("功能使用")])),_:1})]),a("li",null,[n(e,{to:"#设计实现"},{default:p(()=>s[3]||(s[3]=[o("设计实现")])),_:1}),a("ul",null,[a("li",null,[n(e,{to:"#信息采集"},{default:p(()=>s[4]||(s[4]=[o("信息采集")])),_:1})]),a("li",null,[n(e,{to:"#更新频率"},{default:p(()=>s[5]||(s[5]=[o("更新频率")])),_:1})]),a("li",null,[n(e,{to:"#采集维度"},{default:p(()=>s[6]||(s[6]=[o("采集维度")])),_:1})]),a("li",null,[n(e,{to:"#消息格式"},{default:p(()=>s[7]||(s[7]=[o("消息格式")])),_:1})]),a("li",null,[n(e,{to:"#内部使用"},{default:p(()=>s[8]||(s[8]=[o("内部使用")])),_:1})]),a("li",null,[n(e,{to:"#结果展示"},{default:p(()=>s[9]||(s[9]=[o("结果展示")])),_:1})])])])])]),s[11]||(s[11]=d(`<h2 id="功能介绍" tabindex="-1"><a class="header-anchor" href="#功能介绍"><span>功能介绍</span></a></h2><p>PolarDB for PostgreSQL 的 ePQ 弹性跨机并行查询功能可以将一个大查询分散到多个节点上执行，从而加快查询速度。该功能会涉及到各个节点之间的通信，包括执行计划的分发、执行的控制、结果的获取等等。因此设计了 <strong>集群拓扑视图</strong> 功能，用于为 ePQ 组件收集并展示集群的拓扑信息，实现跨节点查询。</p><h2 id="术语" tabindex="-1"><a class="header-anchor" href="#术语"><span>术语</span></a></h2><ul><li>RW / Primary：读写节点，后统称为 Primary</li><li>RO / Replica：只读节点，后统称为 Replica</li><li>Standby：灾备节点</li><li>Replication Slot：流复制槽，PostgreSQL 中用于持久化流复制关系的机制</li></ul><h2 id="功能使用" tabindex="-1"><a class="header-anchor" href="#功能使用"><span>功能使用</span></a></h2><p>集群拓扑视图的维护是完全透明的，用户只需要按照部署文档搭建一写多读的集群，集群拓扑视图即可正确维护起来。关键在于需要搭建带有流复制槽的 Replica / Standby 节点。</p><p>使用以下接口可以获取集群拓扑视图（执行结果来自于 PolarDB for PostgreSQL 11）：</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line">postgres<span class="token operator">=</span><span class="token comment"># SELECT * FROM polar_cluster_info;</span></span>
<span class="line"> name  <span class="token operator">|</span>   host    <span class="token operator">|</span> port <span class="token operator">|</span> release_date <span class="token operator">|</span> version <span class="token operator">|</span> slot_name <span class="token operator">|</span>  <span class="token keyword">type</span>   <span class="token operator">|</span> state <span class="token operator">|</span> cpu <span class="token operator">|</span> cpu_quota <span class="token operator">|</span> memory <span class="token operator">|</span> memory_quota <span class="token operator">|</span> iops <span class="token operator">|</span> iops_quota <span class="token operator">|</span> connection <span class="token operator">|</span> connection_quota <span class="token operator">|</span> px_connection <span class="token operator">|</span> px_connection_quota <span class="token operator">|</span> px_node</span>
<span class="line"><span class="token comment">-------+-----------+------+--------------+---------+-----------+---------+-------+-----+-----------+--------+--------------+------+------------+------------+------------------+---------------+---------------------+---------</span></span>
<span class="line"> node0 <span class="token operator">|</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">|</span> <span class="token number">5432</span> <span class="token operator">|</span> <span class="token number">20220930</span>     <span class="token operator">|</span> <span class="token number">1.1</span><span class="token number">.27</span>  <span class="token operator">|</span>           <span class="token operator">|</span> RW      <span class="token operator">|</span> Ready <span class="token operator">|</span>   <span class="token number">0</span> <span class="token operator">|</span>         <span class="token number">0</span> <span class="token operator">|</span>      <span class="token number">0</span> <span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>                <span class="token number">0</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>                   <span class="token number">0</span> <span class="token operator">|</span> f</span>
<span class="line"> node1 <span class="token operator">|</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">|</span> <span class="token number">5433</span> <span class="token operator">|</span> <span class="token number">20220930</span>     <span class="token operator">|</span> <span class="token number">1.1</span><span class="token number">.27</span>  <span class="token operator">|</span> replica1  <span class="token operator">|</span> RO      <span class="token operator">|</span> Ready <span class="token operator">|</span>   <span class="token number">0</span> <span class="token operator">|</span>         <span class="token number">0</span> <span class="token operator">|</span>      <span class="token number">0</span> <span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>                <span class="token number">0</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>                   <span class="token number">0</span> <span class="token operator">|</span> t</span>
<span class="line"> node2 <span class="token operator">|</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">|</span> <span class="token number">5434</span> <span class="token operator">|</span> <span class="token number">20220930</span>     <span class="token operator">|</span> <span class="token number">1.1</span><span class="token number">.27</span>  <span class="token operator">|</span> replica2  <span class="token operator">|</span> RO      <span class="token operator">|</span> Ready <span class="token operator">|</span>   <span class="token number">0</span> <span class="token operator">|</span>         <span class="token number">0</span> <span class="token operator">|</span>      <span class="token number">0</span> <span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>                <span class="token number">0</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>                   <span class="token number">0</span> <span class="token operator">|</span> t</span>
<span class="line"> node3 <span class="token operator">|</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">|</span> <span class="token number">5431</span> <span class="token operator">|</span> <span class="token number">20220930</span>     <span class="token operator">|</span> <span class="token number">1.1</span><span class="token number">.27</span>  <span class="token operator">|</span> standby1  <span class="token operator">|</span> Standby <span class="token operator">|</span> Ready <span class="token operator">|</span>   <span class="token number">0</span> <span class="token operator">|</span>         <span class="token number">0</span> <span class="token operator">|</span>      <span class="token number">0</span> <span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span>                <span class="token number">0</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span>                   <span class="token number">0</span> <span class="token operator">|</span> f</span>
<span class="line"><span class="token punctuation">(</span><span class="token number">4</span> <span class="token keyword">rows</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><ul><li><code>name</code> 是节点的名称，是自动生成的。</li><li><code>host</code> / <code>port</code> 表示了节点的连接信息。在这里，都是本地地址。</li><li><code>release_date</code> 和 <code>version</code> 标识了 PolarDB 的版本信息。</li><li><code>slot_name</code> 是节点连接所使用的流复制槽，只有使用流复制槽连接上来的节点才会被统计在该视图中（除 Primary 节点外）。</li><li><code>type</code> 表示节点的类型，有三类： <ul><li>PolarDB for PostgreSQL 11：RW / RO / Standby</li><li>PolarDB for PostgreSQL 14：Primary / Replica / Standby</li></ul></li><li><code>state</code> 表示节点的状态。有 Offline / Going Offline / Disabled / Initialized / Pending / Ready / Unknown 这些状态，其中只有 Ready 才有可能参与 PX 计算，其他的都无法参与 PX 计算。</li><li><code>px_node</code> 表示是否参与 PX 计算。</li><li>后续字段都是性能采集相关的字段，目前都是留空的。</li></ul><p>对于 ePQ 查询来说，默认只有 Replica 节点参与。可以通过参数控制使用 Primary 节点或者 Standby 节点参与计算：</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token comment">-- 使 Primary 节点参与计算</span></span>
<span class="line"><span class="token keyword">SET</span> polar_px_use_master <span class="token operator">=</span> <span class="token keyword">ON</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 使 Standby 节点参与计算</span></span>
<span class="line"><span class="token keyword">SET</span> polar_px_use_standby <span class="token operator">=</span> <span class="token keyword">ON</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>从 PolarDB for PostgreSQL 14 起，<code>polar_px_use_master</code> 参数改名为 <code>polar_px_use_primary</code>。</p></div><p>还可以使用 <code>polar_px_nodes</code> 指定哪些节点参与 PX 计算。例如使用上述集群拓扑视图，可以执行如下命令，让 PX 查询只在 replica1 上执行。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">SET</span> polar_px_nodes <span class="token operator">=</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="设计实现" tabindex="-1"><a class="header-anchor" href="#设计实现"><span>设计实现</span></a></h2><h3 id="信息采集" tabindex="-1"><a class="header-anchor" href="#信息采集"><span>信息采集</span></a></h3><p>集群拓扑视图信息的采集是通过流复制来传递信息的。该功能对流复制协议增加了新的消息类型用于集群拓扑视图的传递。分为以下两个步骤：</p><ul><li>Replica / Standby 将状态传递给 Primary</li><li>Primary 汇总集群拓扑视图，返回给 Replica / Standby</li></ul><h3 id="更新频率" tabindex="-1"><a class="header-anchor" href="#更新频率"><span>更新频率</span></a></h3><p>集群拓扑视图并非定时更新与发送，因为视图并非一直变化。只有当节点刚启动时，或发生关键状态变化时再进行更新发送。</p><p>在具体实现上，Primary 节点收集的全局状态带有版本 generation，只有在接收到节点拓扑变化才会递增；当全局状态版本更新后，才会发送到其他节点，其他节点接收到后，设置到自己的节点上。</p><p><img src="`+m+'" alt="生成集群拓扑视图"></p><h3 id="采集维度" tabindex="-1"><a class="header-anchor" href="#采集维度"><span>采集维度</span></a></h3><p>状态指标：</p><ul><li>节点 name</li><li>节点 host / port</li><li>节点 slot_name</li><li>节点负载（CPU / MEM / 连接 / IOPS）</li><li>节点状态 <ul><li>Offline</li><li>Going Offline</li><li>Disabled</li><li>Initialized</li><li>Pending</li><li>Ready</li><li>Unknown</li></ul></li></ul><h3 id="消息格式" tabindex="-1"><a class="header-anchor" href="#消息格式"><span>消息格式</span></a></h3><p>同 WAL Sender / WAL Reciver 的其他消息的做法，新增 <code>&#39;m&#39;</code> 和 <code>&#39;M&#39;</code> 消息类型，用于收集节点信息和广播集群拓扑视图。</p><h3 id="内部使用" tabindex="-1"><a class="header-anchor" href="#内部使用"><span>内部使用</span></a></h3><p>提供接口获取 Replica 列表，提供 IP / port 等信息，用于 PX 查询。</p><p>预留了较多的负载接口，可以根据负载来实现动态调整并行度。（尚未接入）</p><p>同时增加了参数 <code>polar_px_use_master</code> / <code>polar_px_use_standby</code>，将 Primary / Standby 加入到 PX 计算中，默认不打开（可能会有正确性问题，因为快照格式、Vacuum 等原因，快照有可能不可用）。</p><p>ePQ 会使用上述信息生成节点的连接信息并缓存下来，并在 ePQ 查询中使用该视图。当 generation 更新或者设置了 <code>polar_px_nodes</code> / <code>polar_px_use_master</code> / <code>polar_px_use_standby</code> 时，该缓存会被重置，并在下次使用时重新生成缓存。</p><h3 id="结果展示" tabindex="-1"><a class="header-anchor" href="#结果展示"><span>结果展示</span></a></h3><p>通过 <code>polar_monitor</code> 插件提供视图，将上述集群拓扑视图提供出去，在任意节点均可获取。</p>',34))])}const g=i(b,[["render",f]]),y=JSON.parse('{"path":"/zh/features/epq/cluster-info.html","title":"集群拓扑视图","lang":"zh-CN","frontmatter":{"author":"烛远","date":"2022/09/20","minute":20},"headers":[{"level":2,"title":"功能介绍","slug":"功能介绍","link":"#功能介绍","children":[]},{"level":2,"title":"术语","slug":"术语","link":"#术语","children":[]},{"level":2,"title":"功能使用","slug":"功能使用","link":"#功能使用","children":[]},{"level":2,"title":"设计实现","slug":"设计实现","link":"#设计实现","children":[{"level":3,"title":"信息采集","slug":"信息采集","link":"#信息采集","children":[]},{"level":3,"title":"更新频率","slug":"更新频率","link":"#更新频率","children":[]},{"level":3,"title":"采集维度","slug":"采集维度","link":"#采集维度","children":[]},{"level":3,"title":"消息格式","slug":"消息格式","link":"#消息格式","children":[]},{"level":3,"title":"内部使用","slug":"内部使用","link":"#内部使用","children":[]},{"level":3,"title":"结果展示","slug":"结果展示","link":"#结果展示","children":[]}]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"zh/features/epq/cluster-info.md"}');export{g as comp,y as data};
