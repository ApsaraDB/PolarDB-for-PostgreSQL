import{_ as k,c as u,a,b as n,e as r,w as e,r as t,o as d,d as p}from"./app-HZE5kvva.js";const m={},h={class:"table-of-contents"};function b(c,s){const i=t("ArticleInfo"),l=t("router-link"),o=t("RouteLink");return d(),u("div",null,[s[11]||(s[11]=a("h1",{id:"tpc-c-测试",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#tpc-c-测试"},[a("span",null,"TPC-C 测试")])],-1)),n(i,{frontmatter:c.$frontmatter},null,8,["frontmatter"]),s[12]||(s[12]=a("p",null,"本文将引导您对 PolarDB for PostgreSQL 进行 TPC-C 测试。",-1)),a("nav",h,[a("ul",null,[a("li",null,[n(l,{to:"#背景"},{default:e(()=>s[0]||(s[0]=[p("背景")])),_:1})]),a("li",null,[n(l,{to:"#测试步骤"},{default:e(()=>s[1]||(s[1]=[p("测试步骤")])),_:1}),a("ul",null,[a("li",null,[n(l,{to:"#部署-polardb-pg"},{default:e(()=>s[2]||(s[2]=[p("部署 PolarDB-PG")])),_:1})]),a("li",null,[n(l,{to:"#安装测试工具-benchmarksql"},{default:e(()=>s[3]||(s[3]=[p("安装测试工具 BenchmarkSQL")])),_:1})]),a("li",null,[n(l,{to:"#tpc-c-配置"},{default:e(()=>s[4]||(s[4]=[p("TPC-C 配置")])),_:1})]),a("li",null,[n(l,{to:"#导入数据"},{default:e(()=>s[5]||(s[5]=[p("导入数据")])),_:1})]),a("li",null,[n(l,{to:"#预热数据"},{default:e(()=>s[6]||(s[6]=[p("预热数据")])),_:1})]),a("li",null,[n(l,{to:"#正式测试"},{default:e(()=>s[7]||(s[7]=[p("正式测试")])),_:1})]),a("li",null,[n(l,{to:"#查看结果"},{default:e(()=>s[8]||(s[8]=[p("查看结果")])),_:1})])])])])]),s[13]||(s[13]=r('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>TPC 是一系列事务处理和数据库基准测试的规范。其中 <a href="https://www.tpc.org/tpcc/" target="_blank" rel="noopener noreferrer">TPC-C</a> (Transaction Processing Performance Council) 是针对 OLTP 的基准测试模型。TPC-C 测试模型给基准测试提供了一种统一的测试标准，可以大体观察出数据库服务稳定性、性能以及系统性能等一系列问题。对数据库展开 TPC-C 基准性能测试，一方面可以衡量数据库的性能，另一方面可以衡量采用不同硬件软件系统的性价比，是被业内广泛应用并关注的一种测试模型。</p><h2 id="测试步骤" tabindex="-1"><a class="header-anchor" href="#测试步骤"><span>测试步骤</span></a></h2><h3 id="部署-polardb-pg" tabindex="-1"><a class="header-anchor" href="#部署-polardb-pg"><span>部署 PolarDB-PG</span></a></h3><p>参考如下教程部署 PolarDB for PostgreSQL：</p>',5)),a("ul",null,[a("li",null,[n(o,{to:"/deploying/quick-start.html"},{default:e(()=>s[9]||(s[9]=[p("快速部署")])),_:1})]),a("li",null,[n(o,{to:"/deploying/deploy.html"},{default:e(()=>s[10]||(s[10]=[p("进阶部署")])),_:1})])]),s[14]||(s[14]=r(`<h3 id="安装测试工具-benchmarksql" tabindex="-1"><a class="header-anchor" href="#安装测试工具-benchmarksql"><span>安装测试工具 BenchmarkSQL</span></a></h3><p><a href="https://github.com/pgsql-io/benchmarksql" target="_blank" rel="noopener noreferrer">BenchmarkSQL</a> 依赖 Java 运行环境与 Maven 包管理工具，需要预先安装。拉取 BenchmarkSQL 工具源码并进入目录后，通过 <code>mvn</code> 编译工程：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">git</span> clone https://github.com/pgsql-io/benchmarksql.git</span>
<span class="line">$ <span class="token builtin class-name">cd</span> benchmarksql</span>
<span class="line">$ mvn</span>
<span class="line"></span></code></pre></div><p>编译出的工具位于如下目录中：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token builtin class-name">cd</span> target/run</span>
<span class="line"></span></code></pre></div><h3 id="tpc-c-配置" tabindex="-1"><a class="header-anchor" href="#tpc-c-配置"><span>TPC-C 配置</span></a></h3><p>在编译完毕的工具目录下，将会存在面向不同数据库产品的示例配置：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">$ <span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">grep</span> sample</span>
<span class="line">sample.firebird.properties</span>
<span class="line">sample.mariadb.properties</span>
<span class="line">sample.oracle.properties</span>
<span class="line">sample.postgresql.properties</span>
<span class="line">sample.transact-sql.properties</span>
<span class="line"></span></code></pre></div><p>其中，<code>sample.postgresql.properties</code> 包含 PostgreSQL 系列数据库的模板参数，可以基于这个模板来修改并自定义配置。参考 BenchmarkSQL 工具的 <a href="https://github.com/pgsql-io/benchmarksql/blob/master/docs/PROPERTIES.md" target="_blank" rel="noopener noreferrer">文档</a> 可以查看关于配置项的详细描述。</p><p>配置项包含的配置类型有：</p><ul><li>JDBC 驱动及连接信息：需要自行配置 PostgreSQL 数据库运行的连接串、用户名、密码等</li><li>测试规模参数</li><li>测试时间参数</li><li>吞吐量参数</li><li>事务类型参数</li></ul><h3 id="导入数据" tabindex="-1"><a class="header-anchor" href="#导入数据"><span>导入数据</span></a></h3><p>使用 <code>runDatabaseBuild.sh</code> 脚本，以配置文件作为参数，产生和导入测试数据：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./runDatabaseBuild.sh sample.postgresql.properties</span>
<span class="line"></span></code></pre></div><h3 id="预热数据" tabindex="-1"><a class="header-anchor" href="#预热数据"><span>预热数据</span></a></h3><p>通常，在正式测试前会进行一次数据预热：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./runBenchmark.sh sample.postgresql.properties</span>
<span class="line"></span></code></pre></div><h3 id="正式测试" tabindex="-1"><a class="header-anchor" href="#正式测试"><span>正式测试</span></a></h3><p>预热完毕后，再次运行同样的命令进行正式测试：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./runBenchmark.sh sample.postgresql.properties</span>
<span class="line"></span></code></pre></div><h3 id="查看结果" tabindex="-1"><a class="header-anchor" href="#查看结果"><span>查看结果</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">                                          _____ latency <span class="token punctuation">(</span>seconds<span class="token punctuation">)</span> _____</span>
<span class="line">  TransType              count <span class="token operator">|</span>   mix % <span class="token operator">|</span>    mean       max     90th% <span class="token operator">|</span>    rbk%          errors</span>
<span class="line">+--------------+---------------+---------+---------+---------+---------+---------+---------------+</span>
<span class="line"><span class="token operator">|</span> NEW_ORDER    <span class="token operator">|</span>           <span class="token number">635</span> <span class="token operator">|</span>  <span class="token number">44.593</span> <span class="token operator">|</span>   <span class="token number">0.006</span> <span class="token operator">|</span>   <span class="token number">0.012</span> <span class="token operator">|</span>   <span class="token number">0.008</span> <span class="token operator">|</span>   <span class="token number">1.102</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> PAYMENT      <span class="token operator">|</span>           <span class="token number">628</span> <span class="token operator">|</span>  <span class="token number">44.101</span> <span class="token operator">|</span>   <span class="token number">0.001</span> <span class="token operator">|</span>   <span class="token number">0.006</span> <span class="token operator">|</span>   <span class="token number">0.002</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> ORDER_STATUS <span class="token operator">|</span>            <span class="token number">58</span> <span class="token operator">|</span>   <span class="token number">4.073</span> <span class="token operator">|</span>   <span class="token number">0.093</span> <span class="token operator">|</span>   <span class="token number">0.168</span> <span class="token operator">|</span>   <span class="token number">0.132</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> STOCK_LEVEL  <span class="token operator">|</span>            <span class="token number">52</span> <span class="token operator">|</span>   <span class="token number">3.652</span> <span class="token operator">|</span>   <span class="token number">0.035</span> <span class="token operator">|</span>   <span class="token number">0.044</span> <span class="token operator">|</span>   <span class="token number">0.041</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> DELIVERY     <span class="token operator">|</span>            <span class="token number">51</span> <span class="token operator">|</span>   <span class="token number">3.581</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>   <span class="token number">0.001</span> <span class="token operator">|</span>   <span class="token number">0.001</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span></span>
<span class="line"><span class="token operator">|</span> DELIVERY_BG  <span class="token operator">|</span>            <span class="token number">51</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>   <span class="token number">0.018</span> <span class="token operator">|</span>   <span class="token number">0.023</span> <span class="token operator">|</span>   <span class="token number">0.020</span> <span class="token operator">|</span>   <span class="token number">0.000</span> <span class="token operator">|</span>             <span class="token number">0</span> <span class="token operator">|</span></span>
<span class="line">+--------------+---------------+---------+---------+---------+---------+---------+---------------+</span>
<span class="line"></span>
<span class="line">Overall NOPM:          <span class="token number">635</span> <span class="token punctuation">(</span><span class="token number">98.76</span>% of the theoretical maximum<span class="token punctuation">)</span></span>
<span class="line">Overall TPM:         <span class="token number">1,424</span></span>
<span class="line"></span></code></pre></div><p>另外也有 CSV 形式的结果被保存，从输出日志中可以找到结果存放目录。</p>`,23))])}const f=k(m,[["render",b]]),v=JSON.parse('{"path":"/operation/tpcc-test.html","title":"TPC-C 测试","lang":"en-US","frontmatter":{"author":"棠羽","date":"2023/04/11","minute":15},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"测试步骤","slug":"测试步骤","link":"#测试步骤","children":[{"level":3,"title":"部署 PolarDB-PG","slug":"部署-polardb-pg","link":"#部署-polardb-pg","children":[]},{"level":3,"title":"安装测试工具 BenchmarkSQL","slug":"安装测试工具-benchmarksql","link":"#安装测试工具-benchmarksql","children":[]},{"level":3,"title":"TPC-C 配置","slug":"tpc-c-配置","link":"#tpc-c-配置","children":[]},{"level":3,"title":"导入数据","slug":"导入数据","link":"#导入数据","children":[]},{"level":3,"title":"预热数据","slug":"预热数据","link":"#预热数据","children":[]},{"level":3,"title":"正式测试","slug":"正式测试","link":"#正式测试","children":[]},{"level":3,"title":"查看结果","slug":"查看结果","link":"#查看结果","children":[]}]}],"git":{"updatedTime":1760793941000,"contributors":[{"name":"aCoder2013","username":"aCoder2013","email":"7877752+aCoder2013@users.noreply.github.com","commits":1,"url":"https://github.com/aCoder2013"}],"changelog":[{"hash":"6fcfdc2993a4b32b3c1c8119b43c3545d6ab9654","time":1760793941000,"email":"7877752+aCoder2013@users.noreply.github.com","author":"acoder2014","message":"fix: typo in arch-overview.md (#608)"}]},"filePathRelative":"operation/tpcc-test.md"}');export{f as comp,v as data};
